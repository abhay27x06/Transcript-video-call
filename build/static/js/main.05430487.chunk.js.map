{"version":3,"sources":["components/userWindow.jsx","assets/mountains-home.png","assets/microsoft-teams.svg","assets/avatar.png","assets/home-right-vector.png","utils/utilityFunctions.jsx","components/Home.jsx","components/Chats.jsx","components/Transcript.jsx","components/Meet.jsx","components/SignIn.jsx","components/SignUp.jsx","ProtectedRoute/ProtectedRoute.js","components/MainComponent.jsx","components/ForgotPassword.jsx","App.js","reportWebVitals.js","Reducer/Reducer.js","index.js"],"names":["UserWindow","_ref","hostRef","style","muted","id","_jsx","ref","autoPlay","playsInline","Toggler","state","setState","MediaInit","async","camera","mic","setStream","setAudioDevices","setVideoDevices","Promise","resolve","reject","navigator","mediaDevices","getUserMedia","audio","video","then","stream","current","srcObject","catch","error","connect","email","userDetails","name","videoDevices","audioDevices","dispatch","setEmail","data","type","setName","setMic","setCamera","props","history","useHistory","useRef","home_video_style","uuid","width","borderRadius","height","objectFit","display","modalIsOpen","setmodalIsOpen","useState","stable","setStable","roomID","match","params","teamId","useEffect","toast","info","err","getVideoTracks","enabled","getAudioTracks","ToggleState","_jsxs","className","children","Modal","isOpen","onRequestClose","overlay","backgroundColor","content","top","left","right","bottom","marginRight","transform","padding","contentLabel","Link","to","concat","color","window","location","href","split","CopyToClipboard","text","onCopy","dark","Icon","icon","documentCopy20Filled","src","MicrosoftTeams","alt","UserVideo","cameraVideoOffFill","micIcon","onClick","micMute","cameraVideo","cameraVideoOff","Mountains_background","Avatar","_Fragment","Loader","push","disabled","Group_Connect","ToastContainer","Chats","chats","sendMessage","openChat","setOpenChat","message","setMessage","messagesEndRef","scrollToBottom","scrollIntoView","behavior","ProSidebar","collapsed","rtl","collapsedWidth","SidebarHeader","arrowRight","SidebarContent","map","chat","index","SidebarFooter","placeholder","onKeyPress","e","event","key","onChange","target","value","sendFilled","Transcript","transcriptsRef","openTranscripts","setOpenTranscripts","arrowLeft","transcript","CreateRef","peer","options","clientRef","optionUser","on","console","log","getTracks","destroyed","peerID","slice","socket","userId","setUserId","setSocket","peers","setPeers","userUpdate","setUserUpdate","chatBadge","setChatBadge","socketRef","peersRef","chatsRef","screenSharesRef","screenShares","setScreenShares","screenStream","screenStreamComponent","userScreenStreams","setChats","transcripts","setTranscripts","FrontalTranscript","setFrontalTranscript","transcriptEnabled","setTranscriptEnabled","screenSharingEnabled","setScreenSharingEnabled","presenter","screenSharingEnabledRef","customBackground","setCustomBackground","recordedChunks","setRecordedChunks","chunks","mediaRecorder","startStream","i","forEach","length","emit","document","getElementById","onbeforeunload","stopMediaRecorder","stopTranscripting","createStream","startChat","socketNew","io","url","axios","method","headers","localStorage","getItem","chatsUpdated","screenShare","stop","updateStream","getDisplayMedia","screenStreamUpdate","screenRef","replaceTrack","onended","position","hideProgressBar","autoClose","enableScreenSharingForNewUser","uniqueMeetingId","symblEndpoint","accessToken","ws","startLoadingTranscript","transcriptStream","btoa","WebSocket","startTranscripting","_ref2","onmessage","JSON","parse","hasOwnProperty","conversationId","messages","payload","from","topic","topics","insight","insights","user","punctuated","onerror","onclose","onopen","send","stringify","meetingTitle","insightTypes","config","confidenceThreshold","languageCode","speechRecognition","encoding","sampleRateHertz","speaker","context","AudioContext","source","createMediaStreamSource","processor","createScriptProcessor","gainNode","createGain","destination","onaudioprocess","inputData","inputBuffer","getChannelData","Float32Array","bufferSize","targetBuffer","Int16Array","Math","min","readyState","OPEN","buffer","handleSuccess","clone","track","kind","users","userID","userToSignal","callerID","Peer","initiator","trickle","signal","createPeer","new","peersForScreenStream","createPeerForScreenShare","incomingSignal","addPeer","peerUpdate","filter","p","_ref3","destroy","undefined","find","addPeerForScreenShare","findIndex","download","blob","Blob","URL","createObjectURL","a","createElement","body","appendChild","Date","click","revokeObjectURL","overflowMenuHorizontal","Switch","uncheckedIcon","checkedIcon","val","getElementsByClassName","backgroundImage","checked","startMediaRecorder","videos","getElementsByTagName","audioContext","dest","createMediaStreamDestination","Array","newScreenRecorderStream","MediaStream","MediaRecorder","mimeType","ondataavailable","size","start","record48Regular","transcriptIcon","shareScreenStop20Filled","shareScreenStart28Filled","bxsMessageAltDetail","phoneOff","disconnectMeet","setTimeout","senderId","pauseOnFocusLoss","ReactTooltip","effect","place","auth","setAuth","loader","setLoader","password","setPassword","success","closeOnClick","pauseOnHover","setItem","token","response","confirmPassword","setConfirmPassword","otpVerified","SetOtpVerified","otpSent","setOtpSent","receivedOtp","setReceivedOtp","clientOtp","setClientOtp","hash","sha256","signup","test","ProtectedRoute","React","Component","render","component","this","Route","Redirect","joiningRoom","joiningPath","setJoiningRoom","setJoiningPath","rooms","setRooms","room","setRoom","roomRef","roomsRef","setRoomId","modalCreateRoomIsOpen","setmodalCreateRoomIsOpen","roomName","setRoomName","roomSideBar","setRoomSideBar","screen","customStylesModal","zIndex","joinRoom","_id","roomUpdate","RoomJoiningID","socketId","roomsUpdate","jp","selectRoom","dataset","roomid","chatUpdate","menuIcon","fontSize","bxsAddToQueue","joinOuter","removeItem","bxLogOut","roomEach","toUpperCase","desktopArrowRight24Regular","forgotpassword","Routing","urlArray","roomIdFormat","ele","path","exact","Meet","Home","MainComponent","SignUp","SignIn","ForgotPassword","fetch","BrowserRouter","class","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","Reducer","combineReducers","arguments","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","Provider","App"],"mappings":"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","file":"static/js/main.05430487.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"../styles/userWindow.css\"\r\nconst UserWindow = ({hostRef,style,muted,id}) => {\r\n\r\n    return (\r\n        // Video component\r\n            <video ref={hostRef} style={style} muted={muted} id={id} autoPlay playsInline/>\r\n            \r\n        )\r\n}\r\n\r\nexport default UserWindow","export default __webpack_public_path__ + \"static/media/mountains-home.e567e0a9.png\";","export default __webpack_public_path__ + \"static/media/microsoft-teams.daedc043.svg\";","export default __webpack_public_path__ + \"static/media/avatar.cad37a31.png\";","export default __webpack_public_path__ + \"static/media/home-right-vector.5801bc42.png\";","\r\nconst Toggler = (state,setState) =>{\r\n    setState(!state)\r\n}\r\n\r\n// Initialise media\r\nconst MediaInit = async ({camera,mic,hostRef,setStream,setAudioDevices,setVideoDevices}) =>{\r\n\r\n        return await new Promise((resolve,reject) =>{\r\n\r\n         navigator.mediaDevices.getUserMedia({\r\n            audio: true,\r\n            video:true\r\n        }).then(stream => {\r\n            if (hostRef && hostRef.current)    \r\n            {\r\n                hostRef.current.srcObject = stream;\r\n                \r\n                resolve(stream);\r\n            }\r\n        }).catch(error=>{\r\n            reject(error);\r\n        })\r\n\r\n                    \r\n    })\r\n}\r\n\r\n\r\n\r\nexport\r\n{\r\n    Toggler,\r\n    MediaInit\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\"\r\nimport UserVideo from \"./userWindow\"\r\nimport \"../styles/home.css\"\r\nimport { Icon } from '@iconify/react';\r\nimport micMute from '@iconify/icons-bi/mic-mute';\r\nimport micIcon from '@iconify/icons-bi/mic';\r\nimport cameraVideo from '@iconify/icons-bi/camera-video';\r\nimport cameraVideoOff from '@iconify/icons-bi/camera-video-off';\r\nimport cameraVideoOffFill from '@iconify/icons-bi/camera-video-off-fill';\r\nimport documentCopy20Filled from '@iconify/icons-fluent/document-copy-20-filled';\r\nimport Mountains_background from \"../assets/mountains-home.png\";\r\nimport MicrosoftTeams from \"../assets/microsoft-teams.svg\";\r\nimport Avatar from \"../assets/avatar.png\";\r\nimport Group_Connect from \"../assets/home-right-vector.png\";\r\nimport { Toggler, MediaInit } from \"../utils/utilityFunctions\"\r\nimport { connect } from 'react-redux';\r\nimport { v1 as uuid } from \"uuid\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Modal from 'react-modal';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Home = (props) => {\r\n  const {\r\n    mic,\r\n    setMic,\r\n    camera,\r\n    setCamera,\r\n    setStream,\r\n    stream,\r\n    setAudioDevices,\r\n    setVideoDevices\r\n  } = props;\r\n  const history = useHistory();\r\n  const hostRef = useRef();\r\n  const link = useRef(uuid());\r\n  const home_video_style = {\r\n    width: \"100%\",\r\n    borderRadius: \"27px 27px 0 0\",\r\n    height: \"100%\",\r\n    objectFit: \"contain\",\r\n    display: camera ? \"block\" : \"none\"\r\n  }\r\n  const [modalIsOpen, setmodalIsOpen] = useState(false)\r\n  const [stable, setStable] = useState(false)\r\n  const customStylesModal = {\r\n    overlay: {\r\n      backgroundColor: 'rgba(0,0,0,0.7)'\r\n    },\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      padding: '20px'\r\n    },\r\n  };\r\n\r\n  const roomID = props.match.params.teamId;\r\n  useEffect(() => {\r\n    MediaInit({ camera, mic, hostRef, setStream, setAudioDevices, setVideoDevices }).then((stream) => {\r\n      setStream(stream)\r\n      toast.info('Devices are working properly')\r\n      setStable(true)\r\n    })\r\n      .catch(err => {\r\n        toast.error('Devices are not working properly')\r\n      })\r\n  }, [])\r\n  useEffect(() => {\r\n    if (stream) {\r\n      stream.getVideoTracks()[0].enabled = camera\r\n      stream.getAudioTracks()[0].enabled = mic\r\n    }\r\n\r\n  }, [mic, camera])\r\n\r\n  const ToggleState = (state, setState) => {\r\n    Toggler(state, setState);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={() => {\r\n          setmodalIsOpen(false)\r\n        }}\r\n        style={customStylesModal}\r\n        id=\"modal-home\"\r\n        contentLabel=\"Name Modal\"\r\n      >\r\n        <h3>Get your link</h3>\r\n        <div className=\"modal-content-home\">\r\n          <Link to={`/teams/${roomID}`} style={{color:'white'}}>{window.location.href.split('/')[0]+\"//\"+window.location.href.split('/')[2]+\"/teams/\"+roomID}</Link>\r\n          <CopyToClipboard text={window.location.href.split('/')[0]+\"//\"+window.location.href.split('/')[2]+\"/teams/\"+roomID}\r\n          onCopy={()=>{\r\n            toast.dark('Link copied!')\r\n          }}>\r\n          <Icon icon={documentCopy20Filled} \r\n          id=\"copy-to-clipboard-icon\" />\r\n          </CopyToClipboard>\r\n        </div>\r\n      </Modal>\r\n      <div className=\"home-side-left\">\r\n        <img src={MicrosoftTeams} className=\"logo-home\" alt=\"Microsoft Teams\" />\r\n        <div className=\"video-box\">\r\n\r\n          <div className=\"video\">\r\n            <UserVideo hostRef={hostRef} style={home_video_style} muted={true} />\r\n          </div>\r\n\r\n          {!camera\r\n            ?\r\n            <div className=\"video-off-box\">\r\n              <Icon icon={cameraVideoOffFill}\r\n                className=\"video-off\"\r\n              />\r\n              <h3>Camera is Off</h3>\r\n            </div>\r\n            :\r\n            null}\r\n          <div className=\"footer-options-video\">\r\n            {\r\n              mic\r\n                ?\r\n                <Icon icon={micIcon}\r\n                  className=\"video-set-buttons\"\r\n                  onClick={() => { ToggleState(mic, setMic) }}\r\n                />\r\n                :\r\n                <Icon icon={micMute}\r\n                  className=\"video-set-buttons\"\r\n                  onClick={() => { ToggleState(mic, setMic) }}\r\n                />\r\n            }\r\n            {\r\n              camera\r\n                ?\r\n                <Icon icon={cameraVideo}\r\n                  className=\"video-set-buttons\"\r\n                  onClick={() => { ToggleState(camera, setCamera) }}\r\n                />\r\n                :\r\n                <Icon icon={cameraVideoOff}\r\n                  className=\"video-set-buttons\"\r\n                  onClick={() => { ToggleState(camera, setCamera) }}\r\n                />\r\n            }\r\n          </div>\r\n        </div>\r\n        <img src={Mountains_background} className=\"mountainBackground\" alt=\"Mountains\" />\r\n      </div>\r\n      <div className=\"home-side-right\">\r\n        <div className=\"entry-box\">\r\n          <img src={Avatar} className=\"avatar-home\" alt=\"Avatar\" />\r\n          <h1>Join your meeting !</h1>\r\n          {!stable?<><Loader\r\n          type=\"BallTriangle\"\r\n          color=\"#00BFFF\"\r\n          height={30}\r\n          width={30} />\r\n          <h6>Devices are loading ! Please wait</h6></>:null}\r\n          <div className=\"home-entry-options\">\r\n            <button\r\n              className={`home-entry-buttons ${!stable?\"home-entry-buttons-disabled\":''}`}\r\n              onClick={() => {\r\n                history.push(`/teams/${roomID}`)\r\n              }}\r\n              disabled={!stable}\r\n            >Join Now</button>\r\n            <button\r\n              className=\"home-entry-buttons\"\r\n              onClick={() => {\r\n                setmodalIsOpen(true)\r\n              }}\r\n            >\r\n              Share Link\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <img src={Group_Connect} className=\"home-bottom-vector\" />\r\n      </div>\r\n      <ToastContainer />\r\n    </div>)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    email: state.userDetails.email,\r\n    name: state.userDetails.name,\r\n    mic: state.userDetails.mic,\r\n    camera: state.userDetails.camera,\r\n    stream: state.userDetails.stream,\r\n    videoDevices: state.userDetails.videoDevices,\r\n    audioDevices: state.userDetails.audioDevices\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n\r\n    setEmail: data => {\r\n      dispatch({\r\n        type: 'SET_EMAIL',\r\n        email: data,\r\n      })\r\n    },\r\n    setName: data => {\r\n      dispatch({\r\n        type: 'SET_NAME',\r\n        name: data\r\n      })\r\n    },\r\n    setMic: data => {\r\n      dispatch({\r\n        type: 'SET_MIC',\r\n        mic: data\r\n      })\r\n    }\r\n    ,\r\n    setCamera: data => {\r\n      dispatch({\r\n        type: 'SET_CAMERA',\r\n        camera: data\r\n      })\r\n    }\r\n    ,\r\n    setStream: data => {\r\n      dispatch({\r\n        type: 'SET_STREAM',\r\n        stream: data\r\n      })\r\n    },\r\n    setVideoDevices: data => {\r\n      dispatch({\r\n        type: 'SET_VIDEO_DEVICES',\r\n        videoDevices: data\r\n      })\r\n    },\r\n    setAudioDevices: data => {\r\n      dispatch({\r\n        type: 'SET_AUDIO_DEVICES',\r\n        audioDevices: data\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Icon } from '@iconify/react';\r\nimport sendFilled from '@iconify/icons-carbon/send-filled';\r\nimport \"../styles/chat.css\"\r\nimport arrowRight from '@iconify/icons-akar-icons/arrow-right';\r\nimport { ProSidebar, SidebarHeader, SidebarFooter, SidebarContent } from 'react-pro-sidebar';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\n\r\n\r\nconst Chats = ({ chats, sendMessage, openChat, setOpenChat }) => {\r\n  const [message, setMessage] = useState('')\r\n  const messagesEndRef = useRef(null)\r\n  useEffect(() => {\r\n    scrollToBottom()\r\n  })\r\n  const scrollToBottom = () => {\r\n    if (messagesEndRef.current)\r\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\r\n  }\r\n  return (\r\n\r\n    <ProSidebar collapsed={!openChat} rtl={true} collapsedWidth=\"0px\" className=\"chat-pro-sidebar\">\r\n      <SidebarHeader>\r\n        <div className=\"chat-header\">\r\n          <span\r\n            onClick={() => { setOpenChat(!openChat) }}\r\n          >\r\n            <Icon icon={arrowRight} />\r\n          </span>\r\n          <h2>\r\n            Chats\r\n          </h2>\r\n        </div>\r\n      </SidebarHeader>\r\n      <SidebarContent className=\"chat-pro-sidebar-content\">\r\n        {\r\n          chats.map((chat, index) => {\r\n            return (\r\n              <div className={`chat-wrapper ${chat.name === \"You\" ? \"chat-wrapper-user\" : null}`}>\r\n                <div className=\"chat-member-name\">\r\n                  {chat.name}\r\n                </div>\r\n                <div className=\"chat-message\">\r\n                  {chat.message}\r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n        <div ref={messagesEndRef} ></div>\r\n      </SidebarContent>\r\n      <SidebarFooter className=\"chat-pro-sidebar-footer\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type here\"\r\n          className=\"chatEntry\"\r\n          onKeyPress={(e) => {\r\n            e = e || window.event;\r\n            if (e.key === \"Enter\") {\r\n              sendMessage(message);\r\n              setMessage(\"\")\r\n            }\r\n          }}\r\n          onChange={(e) => {\r\n            setMessage(e.target.value)\r\n          }}\r\n          value={message}\r\n        />\r\n        <Icon\r\n          icon={sendFilled}\r\n          onClick={() => {\r\n            sendMessage(message);\r\n            setMessage('')\r\n          }} />\r\n      </SidebarFooter>\r\n    </ProSidebar>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Chats;","import React, { useRef,useEffect } from 'react'\r\nimport { Icon } from '@iconify/react';\r\nimport \"../styles/transcript.css\"\r\nimport arrowLeft from '@iconify/icons-akar-icons/arrow-left';\r\nimport { ProSidebar, SidebarHeader, SidebarContent } from 'react-pro-sidebar';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\n\r\n\r\n\r\nconst Transcript = ({ transcriptsRef, openTranscripts, setOpenTranscripts }) => {\r\n  const messagesEndRef = useRef(null)\r\n  useEffect(() => {\r\n    scrollToBottom()\r\n  })\r\n  const scrollToBottom = () => {\r\n    if (messagesEndRef.current)\r\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\r\n  }\r\n  return (\r\n\r\n    <ProSidebar collapsed={!openTranscripts} rtl={true} collapsedWidth=\"0px\" className=\"transcript-pro-sidebar\">\r\n      <SidebarHeader>\r\n        <div className=\"transcript-header\">\r\n          <span\r\n            onClick={() => { setOpenTranscripts(!openTranscripts) }}\r\n          >\r\n            <Icon icon={arrowLeft} />\r\n          </span>\r\n          <h2>\r\n            Transcript\r\n          </h2>\r\n        </div>\r\n      </SidebarHeader>\r\n      <SidebarContent className=\"transcript-pro-sidebar-content\">\r\n        {\r\n          transcriptsRef.current.map((transcript, index) => {\r\n            return (\r\n              <div className={`transcript-wrapper`}>\r\n                <span className=\"transcript-member-name\">\r\n                  {transcript.name} :\r\n                </span>\r\n                <span className=\"transcript-message\">\r\n                  {transcript.message}\r\n                </span>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n        <div ref={messagesEndRef} ></div>\r\n      </SidebarContent>\r\n\r\n    </ProSidebar>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Transcript\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport UserVideo from \"./userWindow\"\r\nimport { Toggler, MediaInit } from \"../utils/utilityFunctions\"\r\nimport { io } from \"socket.io-client\"\r\nimport Peer from \"simple-peer\"\r\nimport { Icon } from '@iconify/react';\r\nimport micMute from '@iconify/icons-bi/mic-mute';\r\nimport micIcon from '@iconify/icons-bi/mic';\r\nimport cameraVideo from '@iconify/icons-bi/camera-video';\r\nimport cameraVideoOff from '@iconify/icons-bi/camera-video-off';\r\nimport bxsMessageAltDetail from '@iconify/icons-bx/bxs-message-alt-detail';\r\nimport phoneOff from '@iconify/icons-carbon/phone-off';\r\nimport MicrosoftTeams from \"../assets/microsoft-teams.svg\";\r\nimport shareScreenStart28Filled from '@iconify/icons-fluent/share-screen-start-28-filled';\r\nimport shareScreenStop20Filled from '@iconify/icons-fluent/share-screen-stop-20-filled';\r\nimport overflowMenuHorizontal from '@iconify/icons-carbon/overflow-menu-horizontal';\r\nimport record48Regular from '@iconify/icons-fluent/record-48-regular';\r\nimport Switch from \"react-switch\";\r\nimport ReactTooltip from 'react-tooltip';\r\nimport transcriptIcon from '@iconify/icons-gg/transcript';\r\nimport Chats from \"./Chats\";\r\nimport { connect } from 'react-redux';\r\nimport \"../styles/meet.css\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Transcript from './Transcript'\r\nimport { prodUrl as url } from \"../Config/config.json\"\r\nimport axios from \"axios\"\r\n\r\n//  Create Ref component for each peer joining\r\nconst CreateRef = ({ peer, style, options }) => {\r\n  // Ref for each peer\r\n  const clientRef = useRef();\r\n  // check whether peer video and audio setting before rendering them\r\n  var optionUser = peer.options ? peer.options : { video: false, audio: false };\r\n  if (options)\r\n  {\r\n    optionUser = options;\r\n  }\r\n  useEffect(() => {\r\n    // Assign stream to ref on event \"stream\" triggered\r\n    peer.peer.on(\"stream\", (stream) => {\r\n      console.log(stream.getTracks())\r\n      if (clientRef && clientRef.current)\r\n        clientRef.current.srcObject = stream\r\n      peer.stream = stream\r\n    })\r\n\r\n  }, [])\r\n\r\n// Return the video or off video element on the basis of stream enabled or not\r\n// Destroyed stream should not be re-rendered\r\n  return peer.destroyed ? null : <>\r\n    <div className=\"user-video-box\" style={{ display: optionUser.video ? \"block\" : \"none\" }} id={peer.peerID + \"-video_on\"}>\r\n      <UserVideo\r\n        hostRef={clientRef}\r\n        muted={false}\r\n        style={style}\r\n      />\r\n      <div className=\"member-name\">\r\n        {peer.name}\r\n      </div>\r\n    </div>\r\n    <div\r\n      className=\"camera-off-member\"\r\n      style={{ display: !optionUser.video ? \"flex\" : \"none\" }}\r\n      id={peer.peerID + \"-video_off\"}>\r\n      <div className=\"member-name-initial\">{peer.name.slice(0, 1)}</div>\r\n      <div className=\"member-name\">\r\n        {peer.name}\r\n      </div>\r\n    </div>\r\n  </>\r\n\r\n\r\n}\r\n\r\nconst Meet = (props) => {\r\n\r\n  const {\r\n    camera,\r\n    mic,\r\n    setMic,\r\n    setCamera,\r\n    stream,\r\n    setStream,\r\n    name,\r\n    setName,\r\n    socket,\r\n    setSocket,\r\n    userId,\r\n  } = props;\r\n\r\n\r\n  // Ref for the user's video (not peers)\r\n  const hostRef = useRef()\r\n  // List of peers\r\n  const [peers, setPeers] = useState([]);\r\n  // state of user video, audio option updates\r\n  const [userUpdate, setUserUpdate] = useState();\r\n  const [chatBadge, setChatBadge] = useState(false)\r\n  const socketRef = useRef();\r\n  const peersRef = useRef([]);\r\n  const chatsRef = useRef([]);\r\n  // Storing peers for screen Share in ref\r\n  const screenSharesRef = useRef([]);\r\n  // Storing peers for screen Share as a state\r\n  const [screenShares, setScreenShares] = useState([])\r\n  // screenStream is to store screen stream\r\n  const screenStream = useRef()\r\n  // screenStreamComponent is ref video screen share element\r\n  const screenStreamComponent = useRef()\r\n  // Storing screen streams for each person\r\n  const userScreenStreams = useRef([])\r\n  // to open chat panel\r\n  const [openChat, setOpenChat] = useState(false);\r\n  //set array of chats\r\n  const [chats, setChats] = useState([])\r\n  //set array of transcripts\r\n  const [transcripts, setTranscripts] = useState([])\r\n  const [FrontalTranscript,setFrontalTranscript] = useState('')\r\n  // store transcripts\r\n  const transcriptsRef = useRef([])\r\n  //open transcripts panel\r\n  const [transcriptEnabled,setTranscriptEnabled] = useState(false)\r\n  const [openTranscripts, setOpenTranscripts] = useState(false);\r\n  // set state of screen sharing, enabled and presenter\r\n  const [screenSharingEnabled, setScreenSharingEnabled] = useState({ enabled: false, presenter: null })\r\n  const screenSharingEnabledRef = useRef(false);\r\n  //change wallpaper of meeting\r\n  const [customBackground, setCustomBackground] = useState(false)\r\n  // recordchunks which will be processed later on\r\n  const [recordedChunks, setRecordedChunks] = useState({ enabled: false, chunks: [] })\r\n  //store ref to media recording\r\n  const mediaRecorder = useRef(null)\r\n\r\n\r\n  //id of meeting present in url\r\n  const roomID = props.match.params.teamId;\r\n\r\n\r\n  // user video styling\r\n  const style = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    borderRadius: \"27px\",\r\n    objectFit: \"cover\",\r\n  }\r\n// start streaming when join room\r\n  useEffect(() => {\r\n      startStream()\r\n  }, [])\r\n\r\n\r\n //run when ever a new person joins and share screen if enabled for new user \r\n  useEffect(() => {\r\n    var i = 0;\r\n    screenSharesRef.current.forEach((peer) => {\r\n      peer.peer.on(\"stream\", (stream) => {\r\n        userScreenStreams.current.push({ peerID: peer.peerID, stream })\r\n        i++;\r\n        if (i === screenSharesRef.current.length && !screenSharingEnabledRef.current) {\r\n          socketRef.current.emit(\"screen streaming running for new user\", { roomID })\r\n        }\r\n      })\r\n    })\r\n\r\n  }, [screenShares, screenSharesRef])\r\n\r\n\r\n  // any kind of update from peers should be reflected by changing the video or audio over other peers\r\n  useEffect(() => {\r\n\r\n    if (userUpdate) {\r\n      if (userUpdate.video) {\r\n        if (document.getElementById(userUpdate.id + \"-video_on\") && document.getElementById(userUpdate.id + \"-video_off\")) {\r\n          document.getElementById(userUpdate.id + \"-video_on\").style.display = \"block\"\r\n          document.getElementById(userUpdate.id + \"-video_off\").style.display = \"none\"\r\n        }\r\n      }\r\n      else {\r\n        if (document.getElementById(userUpdate.id + \"-video_on\") && document.getElementById(userUpdate.id + \"-video_off\")) {\r\n          document.getElementById(userUpdate.id + \"-video_on\").style.display = \"none\"\r\n          document.getElementById(userUpdate.id + \"-video_off\").style.display = \"flex\"\r\n        }\r\n      }\r\n    }\r\n  }, [userUpdate])\r\n\r\n\r\n  // stop services before leaving the meeting if refreshing or closing tab by the user\r\n  window.onbeforeunload = function () {\r\n    stopMediaRecorder()\r\n    socketRef.current.emit(\"disconnectMeet\", { name, roomID, userId: userId })\r\n    stopTranscripting()\r\n    // For delay if recording is going on and user refreshes or closes tab, which will lead to saving of file\r\n    // SetTimeout doesn't work in onBeforeUnload\r\n    if (mediaRecorder.current)\r\n      for (var i = 0; i < 1000; i++) {\r\n        ;\r\n      }\r\n  }\r\n\r\n  // disonnect when user leaves by explicitly clicking on leave button\r\n  const disconnectMeet = () => {\r\n    stopMediaRecorder()\r\n    socketRef.current.emit(\"disconnectMeet\", { name, roomID, userId })\r\n    stopTranscripting()\r\n    setTranscripts([])\r\n    transcriptsRef.current = []\r\n    setTimeout(() => {\r\n      window.location = \"/\"\r\n    },\r\n      1500);\r\n  }\r\n\r\n\r\n  // startStream and set socket for user\r\n  const startStream = () => {\r\n    if (socket) {\r\n      socketRef.current = socket\r\n      createStream();\r\n      startChat()\r\n    }\r\n    else {\r\n      var socketNew = io.connect(`${url}`)\r\n      socketNew.on('connect', () => {\r\n        axios({\r\n          url: `${url}/updateSocket`,\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${localStorage.getItem('TeamsToken')}`\r\n          },\r\n          data: {\r\n            \"socketId\": socketNew.id\r\n          }\r\n        }).then(data => {\r\n          ;\r\n        })\r\n        socketRef.current = socketNew;\r\n        setSocket(socketNew)\r\n        createStream();\r\n        startChat()\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  // socket to receive message enabled\r\n  const startChat = () => {\r\n    socketRef.current.on(\"receivedMessage\", (message) => {\r\n      setChatBadge(true)\r\n      chatsRef.current = [...chatsRef.current, { name: message.name, message: message.message }];\r\n      const chatsUpdated = chatsRef.current;\r\n      setChats(chatsUpdated)\r\n    })\r\n  }\r\n\r\n// screen sharing enabling and notifying each peer that screen shareing has started, also updating stream for each peer\r\n  const screenShare = () => {\r\n    if (!screenSharingEnabled.enabled) {\r\n      navigator.mediaDevices.getDisplayMedia({ video: true, audio: true }).then(screenStreamUpdate => {\r\n        setScreenSharingEnabled({ enabled: true, presenter: socketRef.current.id })\r\n        screenSharingEnabledRef.current = true\r\n        screenStreamComponent.current.srcObject = screenStreamUpdate\r\n        socketRef.current.emit(\"screen stream update\", { updateStream: true, roomID, name })\r\n        screenSharesRef.current.forEach((screenRef) => {\r\n          if (screenStreamUpdate.getTracks()[1]) {\r\n            screenRef.peer.replaceTrack(screenStream.current.getTracks()[1], screenStreamUpdate.getTracks()[1], screenStream.current)\r\n            screenRef.peer.replaceTrack(screenStream.current.getTracks()[0], screenStreamUpdate.getTracks()[0], screenStream.current)\r\n          }\r\n          else if (screenStreamUpdate.getTracks()[0]) {\r\n            screenRef.peer.replaceTrack(screenStream.current.getTracks()[1], screenStreamUpdate.getTracks()[0], screenStream.current)\r\n          }\r\n        })\r\n        screenStreamUpdate.getVideoTracks()[0].onended = function () {\r\n\r\n          stopMediaRecorder()\r\n          setScreenSharingEnabled({ enabled: false, presenter: null })\r\n          screenSharingEnabledRef.current = false\r\n          if (screenStreamUpdate.getAudioTracks()[0])\r\n            screenStreamUpdate.getAudioTracks()[0].stop();\r\n          socketRef.current.emit(\"screen stream update\", { updateStream: false, roomID, name })\r\n\r\n        };\r\n      }).catch(err => {\r\n        toast.error(`Your device doesn't support screen share`, {\r\n          position: \"top-left\",\r\n          hideProgressBar: true,\r\n          autoClose: 1500,\r\n\r\n        });\r\n      })\r\n    }\r\n    else {\r\n      setScreenSharingEnabled({ enabled: false, presenter: null })\r\n      screenSharingEnabledRef.current = false\r\n      if (screenStreamComponent.current.srcObject.getAudioTracks()[0])\r\n        screenStreamComponent.current.srcObject.getAudioTracks()[0].stop();\r\n      screenStreamComponent.current.srcObject.getVideoTracks()[0].stop()\r\n\r\n      socketRef.current.emit(\"screen stream update\", { updateStream: false, roomID, name })\r\n    }\r\n  }\r\n\r\n\r\n  const enableScreenSharingForNewUser = (peer) => {\r\n    if (screenStreamComponent.current.srcObject.getAudioTracks()[0]) {\r\n      peer.replaceTrack(screenStream.current.getTracks()[1], screenStreamComponent.current.srcObject.getTracks()[1], screenStream.current)\r\n      peer.replaceTrack(screenStream.current.getTracks()[0], screenStreamComponent.current.srcObject.getTracks()[0], screenStream.current)\r\n    }\r\n    else {\r\n      peer.replaceTrack(screenStream.current.getTracks()[1], screenStreamComponent.current.srcObject.getTracks()[0], screenStream.current)\r\n    }\r\n  }\r\n\r\n// send message to each peer via sockets\r\n  const sendMessage = (sendMessage) => {\r\n    const payload = { name, message: sendMessage, senderId: socketRef.current.id, userId, roomID };\r\n    socketRef.current.emit(\"send message\", payload);\r\n    chatsRef.current = [...chatsRef.current, { name: \"You\", message: payload.message }]\r\n    const chatsUpdated = chatsRef.current;\r\n    setChats(chatsUpdated)\r\n\r\n  }\r\n\r\n\r\n// variables for transcript in each room\r\n  var accessToken = null;\r\n  var uniqueMeetingId;\r\n  var symblEndpoint;\r\n  const ws = useRef()\r\n\r\n// loading of transcript and get access token from server\r\n  const startLoadingTranscript = (transcriptStream) => {\r\n    {\r\n\r\n      setTranscriptEnabled(true)\r\n      axios(\r\n        {\r\n          url: `${url}/transcriptToken`,\r\n          method: 'GET'\r\n        }).then(data => {\r\n          toast.dark(\"Transcript is loading\",{\r\n            hideProgressBar:true,\r\n            autoClose:1500,\r\n            position:'top-left'\r\n          })\r\n          accessToken = data.data.accessToken\r\n          uniqueMeetingId = btoa(roomID)\r\n          symblEndpoint = `wss://api.symbl.ai/v1/realtime/insights/${uniqueMeetingId}?access_token=${accessToken}`;\r\n          ws.current=new WebSocket(symblEndpoint)\r\n            startTranscripting({ stream: transcriptStream, roomID, socketRef, name })\r\n          \r\n\r\n        })\r\n    }\r\n  }\r\n\r\n//start transcripting\r\n  const startTranscripting = ({ stream, roomID, socketRef, name }) => {\r\n    // Fired when a message is received from the WebSocket server\r\n    ws.current.onmessage = (event) => {\r\n      // You can find the conversationId in event.message.data.conversationId;\r\n      const data = JSON.parse(event.data);\r\n      if (data.type === 'message' && data.message.hasOwnProperty('data')) {\r\n        console.log('conversationId', data.message.data.conversationId);\r\n      }\r\n      if (data.type === 'message_response') {\r\n        var messagesConcatenation = \"\";\r\n        for (let message of data.messages) {\r\n          // console.log('Transcript (more accurate): ', message.payload.content);\r\n          messagesConcatenation = messagesConcatenation + message.payload.content;\r\n\r\n          transcriptsRef.current = [...transcriptsRef.current, { name: message.from.userId == userId ? 'You' : message.from.name, message: message.payload.content }]\r\n          setTranscripts(transcriptsRef.current)\r\n        }\r\n        setFrontalTranscript('')\r\n      }\r\n      if (data.type === 'topic_response') {\r\n        for (let topic of data.topics) {\r\n          // console.log('Topic detected: ', topic.phrases)\r\n        }\r\n      }\r\n      if (data.type === 'insight_response') {\r\n        for (let insight of data.insights) {\r\n          // console.log('Insight detected: ', insight.payload.content);\r\n        }\r\n      }\r\n      if (data.type === 'message' && data.message.hasOwnProperty('punctuated')) {\r\n        // console.log('Live transcript (less accurate): ', data)\r\n        setFrontalTranscript( (data.message.user.userId == userId?'You':data.message.user.name) +\": \" + data.message.punctuated.transcript)\r\n      }\r\n      console.log(`Response type: ${data.type}. Object: `, data);\r\n    };\r\n\r\n    // Fired when the WebSocket closes unexpectedly due to an error or lost connetion\r\n    ws.current.onerror = (err) => {\r\n      toast.error(\"Facing issue with transcript\")\r\n      console.error(err);\r\n    };\r\n\r\n    // Fired when the WebSocket connection has been closed\r\n    ws.current.onclose = (event) => {\r\n      console.info('Connection to websocket closed');\r\n    };\r\n\r\n    // Fired when the connection succeeds.\r\n    ws.current.onopen = (event) => {\r\n      toast.dark(\"Transcript is ON\", {\r\n        hideProgressBar: true,\r\n        position: 'top-left',\r\n        autoClose: 1500\r\n      })\r\n      ws.current.send(JSON.stringify({\r\n        type: 'start_request',\r\n        meetingTitle: 'Websockets How-to', // Conversation name\r\n        insightTypes: ['question', 'action_item'], // Will enable insight generation\r\n        config: {\r\n          confidenceThreshold: 0.5,\r\n          languageCode: 'en-US',\r\n          speechRecognition: {\r\n            encoding: 'LINEAR16',\r\n            sampleRateHertz: 44100,\r\n          }\r\n        },\r\n        speaker: {\r\n          userId: userId,\r\n          name: name,\r\n        }\r\n      }));\r\n    };\r\n\r\n    /**\r\n     * The callback function which fires after a user gives the browser permission to use\r\n     * the computer's microphone. Starts a recording session which sends the audio stream to\r\n     * the WebSocket endpoint for processing.\r\n     */\r\n    const handleSuccess = (stream) => {\r\n      const AudioContext = window.AudioContext;\r\n      const context = new AudioContext();\r\n      const source = context.createMediaStreamSource(stream);\r\n      const processor = context.createScriptProcessor(1024, 1, 1);\r\n      const gainNode = context.createGain();\r\n      source.connect(gainNode);\r\n      gainNode.connect(processor);\r\n      processor.connect(context.destination);\r\n      processor.onaudioprocess = (e) => {\r\n        // convert to 16-bit payload\r\n        const inputData = e.inputBuffer.getChannelData(0) || new Float32Array(this.bufferSize);\r\n        const targetBuffer = new Int16Array(inputData.length);\r\n        for (let index = inputData.length; index > 0; index--) {\r\n          targetBuffer[index] = 32767 * Math.min(1, inputData[index]);\r\n        }\r\n        // Send audio stream to websocket.\r\n        if (ws.current.readyState === WebSocket.OPEN) {\r\n          ws.current.send(targetBuffer.buffer);\r\n        }\r\n      };\r\n    };\r\n\r\n\r\n    handleSuccess(stream);\r\n  }\r\n\r\n  const stopTranscripting = () => {\r\n    if(ws.current)\r\n    {\r\n      setFrontalTranscript('')\r\n    ws.current.send(JSON.stringify({\r\n      \"type\": \"stop_request\"\r\n    }));\r\n    setTranscriptEnabled(false)\r\n      toast.dark(\"Transcript stopped !\", {\r\n        hideProgressBar: true,\r\n        position: 'top-left',\r\n        autoClose: 1500\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  //create stream os user and add already present users\r\n  function createStream() {\r\n    MediaInit({ camera, mic, hostRef, setStream }).then((stream) => {\r\n      setStream(stream);\r\n      hostRef.current.srcObject = stream;\r\n      screenStream.current = stream.clone();\r\n      screenStream.current.getTracks().forEach(function (track) {\r\n        if (track.kind === \"audio\") {\r\n          track.enabled = false;\r\n        }\r\n        if (track.kind === \"video\") {\r\n          track.enabled = false;\r\n        }\r\n      }\r\n      )\r\n      {\r\n        hostRef.current.srcObject.getTracks().forEach(function (track) {\r\n          if (track.kind === \"audio\") {\r\n            track.enabled = mic;\r\n          }\r\n          if (track.kind === \"video\") {\r\n            track.enabled = camera;\r\n          }\r\n        }\r\n        )\r\n      }\r\n\r\n      var options = { audio: mic, video: camera }\r\n      // join room\r\n      socketRef.current.emit(\"join room\", { roomID, options, name, userId: userId });\r\n      // if transcript is enabled or disabled\r\n      socketRef.current.on(\"transcript updated\",payload=>{\r\n        if(payload.enabled)\r\n        {\r\n          toast.dark(`Transcript enabled by ${payload.name}`,{\r\n          position:'top-left',\r\n          hideProgressBar:true\r\n          })\r\n          startLoadingTranscript(hostRef.current.srcObject)\r\n        }\r\n        else{\r\n          toast.dark(`Transcript disabled by ${payload.name}`,{\r\n            position:'top-left',\r\n            hideProgressBar:true\r\n            })\r\n          stopTranscripting()\r\n        }\r\n      })\r\n      // receive already present users\r\n      socketRef.current.on(\"all users\", (users) => {\r\n      // add peers \r\n        const peers = [];\r\n        users.forEach((userID) => {\r\n          const peer = createPeer(userID.id, socketRef.current.id, stream, options, name);\r\n          peersRef.current.push({\r\n            peerID: userID.id,\r\n            peer,\r\n            options: userID.options,\r\n            name: userID.name,\r\n            new: true,\r\n            destroyed: false\r\n          });\r\n          peers.push({\r\n            peerID: userID.id,\r\n            peer,\r\n            options: userID.options,\r\n            name: userID.name\r\n          });\r\n          toast.dark(`${userID.name} is already present`, {\r\n            position: \"top-left\",\r\n            hideProgressBar: true,\r\n            autoClose: 1500\r\n          });\r\n        });\r\n        setPeers(peers);\r\n        const peersForScreenStream = [];\r\n\r\n        users.forEach((userID) => {\r\n          const peer = createPeerForScreenShare(userID.id, socketRef.current.id, screenStream.current);\r\n          screenSharesRef.current.push({\r\n            peerID: userID.id + \"-screen-share\",\r\n            peer,\r\n            options: userID.options,\r\n            name: userID.name\r\n          });\r\n          peersForScreenStream.push({\r\n            peerID: userID.id + \"-screen-share\",\r\n            peer,\r\n            options: userID.options,\r\n            name: userID.name\r\n          });\r\n\r\n        });\r\n        setScreenShares(peersForScreenStream);\r\n\r\n      });\r\n      // add peer when a user joins\r\n      socketRef.current.on(\"user joined\", (payload) => {\r\n        const peer = addPeer(payload.signal, payload.callerID, stream, payload.options, payload.name);\r\n        peersRef.current.push({\r\n          peerID: payload.callerID,\r\n          peer,\r\n          options: payload.options,\r\n          name: payload.name,\r\n          new: true,\r\n          destroyed: false\r\n        });\r\n        const peerUpdate = peersRef.current.filter((p) => p.peerID !== payload.callerID);\r\n        peerUpdate.push({\r\n          peerID: payload.callerID,\r\n          peer,\r\n          options: payload.options,\r\n          name: payload.name,\r\n\r\n        })\r\n\r\n        setPeers(peerUpdate)\r\n        toast.dark(`${payload.name} has joined`, {\r\n          position: \"top-left\",\r\n          hideProgressBar: true,\r\n          autoClose: 1500\r\n        });\r\n      });\r\n      // destroy peer when user leaves\r\n      socketRef.current.on(\"user left\", ({ id, name }) => {\r\n        peersRef.current.filter((p) => {\r\n          if (p.peerID === id) {\r\n            p.destroyed = true;\r\n            p.peer.destroy();\r\n            if (name === undefined)\r\n              toast.dark(`${p.name} has left`, {\r\n                position: \"top-left\",\r\n                hideProgressBar: true,\r\n                autoClose: 1500\r\n              });\r\n          }\r\n        });\r\n        if (name !== undefined)\r\n          toast.dark(`${name} has left`, {\r\n            position: \"top-left\",\r\n            hideProgressBar: true,\r\n            autoClose: 1500\r\n          });\r\n      });\r\n\r\n      socketRef.current.on(\"receiving returned signal\", (payload) => {\r\n        const item = peersRef.current.find((p) => p.peerID === payload.id);\r\n        item.peer.signal(payload.signal);\r\n      });\r\n      // any kind of update by peer should be reflected for others\r\n      socketRef.current.on(\"change\", (payload) => {\r\n        setUserUpdate({ id: payload.id, video: payload.video, audio: payload.audio });\r\n      });\r\n\r\n      // add screen streams of users\r\n      socketRef.current.on(\"user added screen stream\", (payload) => {\r\n\r\n        const peer = addPeerForScreenShare(payload.signal, payload.callerID, screenStream.current);\r\n        screenSharesRef.current.push({\r\n          peerID: payload.callerID + \"-screen-share\",\r\n          peer,\r\n        });\r\n        const peerUpdate = screenSharesRef.current.filter((p) => p.peerID !== payload.callerID + \"-screen-share\");\r\n        peerUpdate.push({\r\n          peerID: payload.callerID + \"-screen-share\",\r\n          peer,\r\n        })\r\n        setScreenShares(peerUpdate)\r\n        if (screenSharingEnabledRef.current)\r\n          enableScreenSharingForNewUser(peer)\r\n      });\r\n\r\n      // destroy screen stream if a user left\r\n      socketRef.current.on(\"user left screen stream\", (id) => {\r\n\r\n        const index = screenSharesRef.current.findIndex((p) => p.peerID === id);\r\n\r\n        if (index !== -1) {\r\n          if (screenSharesRef.current[index]) {\r\n            screenSharesRef.current[index].peer.destroy();\r\n          }\r\n        }\r\n        const peers = screenSharesRef.current.filter((p) => p.peerID !== id);\r\n        screenSharesRef.current = peers;\r\n\r\n        setScreenShares(peers);\r\n      });\r\n\r\n      socketRef.current.on(\"receiving returned screen stream\", (payload) => {\r\n        const item = screenSharesRef.current.find((p) => p.peerID === payload.id);\r\n        item.peer.signal(payload.signal);\r\n      });\r\n\r\n      socketRef.current.on(\"screen share update\", payload => {\r\n        if (payload.updateStream) {\r\n          setScreenSharingEnabled({ enabled: true, presenter: payload.id })\r\n          screenSharingEnabledRef.current = true\r\n          const peer = userScreenStreams.current.find((peer) => peer.peerID === payload.id + \"-screen-share\");\r\n          screenStreamComponent.current.srcObject = peer.stream;\r\n          toast.dark(`${payload.name} started screen sharing`, {\r\n            position: \"top-left\",\r\n            hideProgressBar: true,\r\n            autoClose: 1500\r\n          })\r\n        }\r\n        else {\r\n          setScreenSharingEnabled({ enabled: false, presenter: null })\r\n          screenSharingEnabledRef.current = false\r\n          toast.dark(`${payload.name} stopped screen sharing`, {\r\n            position: \"top-left\",\r\n            hideProgressBar: false,\r\n            autoClose: 1500\r\n          })\r\n        }\r\n      })\r\n\r\n      \r\n\r\n    }).catch(err => {\r\n      toast.error('Devices not working properly', {\r\n        position: 'top-left',\r\n        hideProgressBar: true,\r\n        autoClose: 1500\r\n      })\r\n      console.error(err)\r\n    })\r\n  }\r\n\r\n\r\n// create peer for present users\r\n  function createPeer(userToSignal, callerID, stream, options, name) {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream\r\n\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socketRef.current.emit(\"sending signal\", {\r\n        userToSignal,\r\n        callerID,\r\n        signal,\r\n        options,\r\n        name\r\n      });\r\n    });\r\n\r\n\r\n    return peer;\r\n  }\r\n\r\n  // add  peer for new users joining\r\n  function addPeer(incomingSignal, callerID, stream, options) {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socketRef.current.emit(\"returning signal\", { signal, callerID, options, name });\r\n    });\r\n\r\n    peer.signal(incomingSignal);\r\n\r\n    return peer;\r\n  }\r\n\r\n  // create peer for present users  for screen sharing\r\n  function createPeerForScreenShare(userToSignal, callerID, stream) {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream\r\n\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socketRef.current.emit(\"sending screen stream\", {\r\n        userToSignal,\r\n        callerID,\r\n        signal,\r\n\r\n      });\r\n    });\r\n\r\n\r\n    return peer;\r\n  }\r\n  // add  peer for new users joining for screen sharing\r\n  function addPeerForScreenShare(incomingSignal, callerID, stream) {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socketRef.current.emit(\"returning screen stream\", { signal, callerID });\r\n    });\r\n\r\n    peer.signal(incomingSignal);\r\n\r\n    return peer;\r\n  }\r\n\r\n// toggle state when video or audio are updated\r\n  const ToggleState = (kind, state, setState) => {\r\n    if (hostRef.current.srcObject && hostRef.current && hostRef) {\r\n      hostRef.current.srcObject.getTracks().forEach(function (track) {\r\n\r\n        if (track.kind === kind) {\r\n\r\n          socketRef.current.emit(\"change\", {\r\n            id: socketRef.current.id,\r\n            video: kind === \"video\" ? !camera : camera,\r\n            audio: kind === \"audio\" ? !mic : mic,\r\n            roomID\r\n          });\r\n          track.enabled = kind === \"audio\" ? !mic : !camera;\r\n        }\r\n        Toggler(state, setState)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  // Media Recording start\r\n  const startMediaRecorder = () => {\r\n\r\n    var videos = document.getElementsByTagName('video')\r\n    // connecting screenshare audio with users audio\r\n    const audioContext = new AudioContext();\r\n    var audios = [];\r\n    var dest = audioContext.createMediaStreamDestination();\r\n    for (let video in Array.from(videos)) {\r\n      if (videos[video].id !== 'user-own-video') {\r\n        if (videos[video].srcObject.getAudioTracks().length != 0)\r\n          audioContext.createMediaStreamSource(videos[video].srcObject).connect(dest)\r\n      }\r\n      else {\r\n        if (hostRef.current.srcObject.getAudioTracks().length != 0)\r\n          audioContext.createMediaStreamSource(hostRef.current.srcObject).connect(dest)\r\n      }\r\n    }\r\n\r\n    var newScreenRecorderStream = new MediaStream([\r\n      dest.stream.getAudioTracks()[0], \r\n    screenStreamComponent.current.srcObject.getVideoTracks()[0]])\r\n\r\n    setRecordedChunks({ enabled: true, chunks: [...recordedChunks.chunks] })\r\n    toast.info(\"Screen Recording Started\", {\r\n      position: 'top-left',\r\n      hideProgressBar: true,\r\n      autoClose: 1500\r\n    })\r\n\r\n    // add opus in mimeType so that firefox also supports\r\n    var options = { mimeType: 'video/webm;codecs=vp8,opus' };\r\n    mediaRecorder.current = new MediaRecorder(newScreenRecorderStream, options);\r\n\r\n    mediaRecorder.current.ondataavailable = handleDataAvailable;\r\n    mediaRecorder.current.start();\r\n\r\n    function handleDataAvailable(event) {\r\n\r\n      if (event.data.size > 0) {\r\n        recordedChunks.chunks.push(event.data);\r\n        setRecordedChunks({ enabled: recordedChunks.enabled, chunks: [...recordedChunks.chunks] })\r\n        download();\r\n      }\r\n    }\r\n  }\r\n  const download = () => {\r\n\r\n    var blob = new Blob(recordedChunks.chunks, {\r\n      type: \"video/webm\"\r\n    });\r\n    var url = URL.createObjectURL(blob);\r\n    var a = document.createElement(\"a\");\r\n    document.body.appendChild(a);\r\n    a.style = \"display: none\";\r\n    a.href = url;\r\n    a.download = `Recording-${new Date()}.webm`;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n    setRecordedChunks({ enabled: false, chunks: [] })\r\n    toast.info(\"Screen Recording Stopped\", {\r\n      position: 'top-left',\r\n      hideProgressBar: true,\r\n      autoClose: 1500\r\n    })\r\n    mediaRecorder.current = null\r\n  }\r\n  const stopMediaRecorder = () => {\r\n    if (mediaRecorder.current) {\r\n      mediaRecorder.current.stop()\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"meet-parent\">\r\n\r\n      {/* Transcript component */}\r\n      <Transcript\r\n        transcripts={transcripts}\r\n        openTranscripts={openTranscripts}\r\n        setOpenTranscripts={setOpenTranscripts}\r\n        transcriptsRef={transcriptsRef} />\r\n\r\n      <div className=\"meet-outer-layout\">\r\n        <div className=\"meet-icons\">\r\n          <img src={MicrosoftTeams}\r\n            className=\"meet-teams-logo\"\r\n          />\r\n          <div className=\"meet-top-option-box\">\r\n            <div className=\"other-options\">\r\n              <Icon icon={overflowMenuHorizontal}\r\n                style={{ color: '#10a19f' }}\r\n              />\r\n              <ul className=\"dropdown-meet\">\r\n                <li>Change Wallpaper\r\n                  <Switch\r\n                    className=\"background-switcher\"\r\n                    uncheckedIcon={false}\r\n                    checkedIcon={false}\r\n                    onChange={(val) => {\r\n                      setCustomBackground(val)\r\n                      if (val)\r\n                        document.\r\n                          getElementsByClassName('meet-outer-layout')[0].\r\n                          style.backgroundImage = `url(\"https://picsum.photos/1920/1080\")`\r\n                      else\r\n                        document.\r\n                          getElementsByClassName('meet-outer-layout')[0].\r\n                          style.backgroundImage = null\r\n                    }} checked={customBackground} />\r\n                </li>\r\n                <li onClick={() => {\r\n                  if (screenSharingEnabled.enabled && screenSharingEnabled.presenter !== socketRef.current.id)\r\n                    return toast.dark(\"Only presenter can record screen\", {\r\n                      position: 'top-left',\r\n                      hideProgressBar: true,\r\n                      autoClose: 1500\r\n                    })\r\n                  if (screenSharingEnabled.enabled && recordedChunks.enabled) {\r\n                    stopMediaRecorder()\r\n                  }\r\n                  else if (screenSharingEnabled.enabled && !recordedChunks.enabled) {\r\n                    startMediaRecorder()\r\n                  }\r\n                  else {\r\n                    toast.dark(\"Start Screen Sharing before Recording\", {\r\n                      position: 'top-left',\r\n                      hideProgressBar: true,\r\n                      autoClose: 1500\r\n                    })\r\n                  }\r\n                }}>\r\n                  {screenSharingEnabled.enabled && recordedChunks.enabled ? 'Stop Screen Recording' : 'Start Screen Recording'}\r\n                  <Icon icon={record48Regular}\r\n                    style={{\r\n                      color: '#eb4a4a'\r\n\r\n                    }}\r\n                  /></li>\r\n                  <li\r\n                  >\r\n                    <span>{transcriptEnabled?'Disable':'Enable'}<br/> Transcript</span>\r\n                    <Switch\r\n                    className=\"background-switcher\"\r\n                    uncheckedIcon={false}\r\n                    checkedIcon={false}\r\n                    onChange={()=>{\r\n                      if(!transcriptEnabled)\r\n                      {\r\n                        \r\n                      socketRef.current.emit(\"transcript enabled\",{userId,name,roomID,enabled:true})\r\n                      startLoadingTranscript(hostRef.current.srcObject)\r\n                      }\r\n                      else\r\n                      {\r\n                        socketRef.current.emit(\"transcript enabled\",{userId,name,roomID,enabled:false})\r\n                        stopTranscripting()                      \r\n                      }\r\n                    }} checked={transcriptEnabled} />\r\n                  </li>\r\n              </ul>\r\n            </div>\r\n            <Icon\r\n              icon={transcriptIcon}\r\n              data-tip=\"Transcript Panel\"\r\n              className=\"chat-opener\"\r\n              onClick={() => {\r\n                setOpenTranscripts(!openTranscripts);\r\n              }}\r\n            />\r\n            {!screenSharingEnabled.enabled\r\n              ? <Icon icon={shareScreenStart28Filled}\r\n                onClick={screenShare}\r\n                data-tip=\"Share Screen\"\r\n                className=\"screen-share\"\r\n              /> :\r\n              <Icon icon={shareScreenStop20Filled}\r\n                data-tip={socketRef.current && screenSharingEnabled.presenter === socketRef.current.id\r\n                  ?\r\n                  'Stop Screen Share'\r\n                  : 'Only presenter can stop screen sharing'\r\n                }\r\n                onClick={\r\n\r\n                  socketRef.current && screenSharingEnabled.presenter === socketRef.current.id\r\n                    ?\r\n                    screenShare\r\n                    :\r\n                    null\r\n                }\r\n                className={`screen-share ${socketRef.current && screenSharingEnabled.presenter !== socketRef.current.id\r\n                  ?\r\n                  'screen-share-disabled'\r\n                  :\r\n                  null}`}\r\n                style={{\r\n                  color: '#ff0000'\r\n                }}\r\n              />\r\n            }\r\n            <div className=\"chat-opener-wrapper\">\r\n              <Icon\r\n                icon={bxsMessageAltDetail}\r\n                className=\"chat-opener\"\r\n                onClick={() => {\r\n                  setOpenChat(!openChat);\r\n                  setChatBadge(false)\r\n                }}\r\n                data-tip=\"Chats Panel\"\r\n              />\r\n              {\r\n                chatBadge ?\r\n                  <div className=\"chat-badge\">\r\n\r\n                  </div> : null\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"meet_And_screen_share\">\r\n\r\n          <div className=\"screen-share-box\" style={{ display: screenSharingEnabled.enabled ? 'flex' : 'none' }}>\r\n            <video ref={screenStreamComponent}\r\n              muted={socketRef.current && screenSharingEnabled.presenter === socketRef.current.id}\r\n              playsInline id=\"share-screen-user\"\r\n              autoPlay />\r\n          </div>\r\n\r\n          <div className=\"members-with-config\" style={{ width: screenSharingEnabled.enabled ? '30%' : '100%' }}>\r\n            <div className=\"members-row\">\r\n              <div className=\"user-video-box\" style={{ display: camera ? 'flex' : 'none' }}>\r\n                <UserVideo hostRef={hostRef} id=\"user-own-video\" muted={true} style={style} />\r\n                <div className=\"member-name\">\r\n                  {name}\r\n                </div>\r\n              </div>\r\n              {camera\r\n                ? null :\r\n                <div className=\"camera-off-member\">\r\n                  <div className=\"member-name-initial\">\r\n                    {name.slice(0, 1)}\r\n                  </div>\r\n                  <div className=\"member-name\">\r\n                    {name}\r\n                  </div>\r\n                </div> \r\n              }\r\n              {\r\n                peersRef.current.map(peer => {\r\n\r\n                  return <CreateRef peer={peer} style={style} />\r\n\r\n                })\r\n              }\r\n            </div>\r\n            {FrontalTranscript?<div className=\"Transcript-down-position\">\r\n              {FrontalTranscript}\r\n            </div>:null}\r\n            <div className=\"meet-options\">\r\n              {\r\n                mic\r\n                  ?\r\n                  <Icon\r\n                    icon={micIcon}\r\n                    className=\"meet-controllers\"\r\n                    data-tip=\"close mic\"\r\n                    onClick={() => {\r\n\r\n                      ToggleState(\"audio\", mic, setMic)\r\n\r\n                    }} />\r\n                  :\r\n                  <Icon\r\n                    icon={micMute}\r\n                    className=\"meet-controllers\"\r\n                    data-tip=\"open mic\"\r\n                    onClick={() => {\r\n\r\n                      ToggleState(\"audio\", mic, setMic)\r\n\r\n                    }} />\r\n              }\r\n              <div className=\"disconnect-meet\">\r\n                <Icon\r\n                  className=\"meet-controllers\"\r\n                  icon={phoneOff}\r\n                  onClick={disconnectMeet}\r\n                />\r\n              </div>\r\n              {\r\n                camera\r\n                  ?\r\n                  <Icon\r\n                    icon={cameraVideo}\r\n                    className=\"meet-controllers\"\r\n                    data-tip=\"close camera\"\r\n                    onClick={() => {\r\n                      ToggleState(\"video\", camera, setCamera)\r\n\r\n                    }} />\r\n                  :\r\n                  <Icon\r\n                    icon={cameraVideoOff}\r\n                    className=\"meet-controllers\"\r\n                    data-tip=\"open camera\"\r\n                    onClick={() => {\r\n                      ToggleState(\"video\", camera, setCamera)\r\n\r\n                    }} />\r\n              }\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n      <Chats chats={chats} sendMessage={sendMessage} openChat={openChat} setOpenChat={setOpenChat} />\r\n      <ToastContainer \r\n      pauseOnFocusLoss={false}\r\n      />\r\n      <ReactTooltip effect=\"solid\" place=\"bottom\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    email: state.userDetails.email,\r\n    name: state.userDetails.name,\r\n    mic: state.userDetails.mic,\r\n    camera: state.userDetails.camera,\r\n    stream: state.userDetails.stream,\r\n    videoDevices: state.userDetails.videoDevices,\r\n    audioDevices: state.userDetails.audioDevices,\r\n    socket: state.userDetails.socket,\r\n    userId: state.userDetails.userId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setUserId: data => {\r\n      dispatch({\r\n        type: 'SET_USER_ID',\r\n        userId: data,\r\n      })\r\n    },\r\n    setEmail: data => {\r\n      dispatch({\r\n        type: 'SET_EMAIL',\r\n        email: data,\r\n      })\r\n    },\r\n    setSocket: data => {\r\n      dispatch({\r\n        type: 'SET_SOCKET',\r\n        socket: data,\r\n      })\r\n    }\r\n    ,\r\n    setName: data => {\r\n      dispatch({\r\n        type: 'SET_NAME',\r\n        name: data\r\n      })\r\n    },\r\n    setMic: data => {\r\n      dispatch({\r\n        type: 'SET_MIC',\r\n        mic: data\r\n      })\r\n    }\r\n    ,\r\n    setCamera: data => {\r\n      dispatch({\r\n        type: 'SET_CAMERA',\r\n        camera: data\r\n      })\r\n    }\r\n    ,\r\n    setStream: data => {\r\n      dispatch({\r\n        type: 'SET_STREAM',\r\n        stream: data\r\n      })\r\n    },\r\n    setVideoDevices: data => {\r\n      dispatch({\r\n        type: 'SET_VIDEO_DEVICES',\r\n        videoDevices: data\r\n      })\r\n    },\r\n    setAudioDevices: data => {\r\n      dispatch({\r\n        type: 'SET_AUDIO_DEVICES',\r\n        audioDevices: data\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Meet)","import React, { useState } from \"react\";\r\nimport Avatar from \"../assets/avatar.png\";\r\nimport Group_Connect from \"../assets/home-right-vector.png\";\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport \"../styles/signin.css\"\r\nimport Loader from \"react-loader-spinner\";\r\nimport MicrosoftTeams from \"../assets/microsoft-teams.svg\";\r\nimport axios from 'axios';\r\nimport { prodUrl as url } from \"../Config/config.json\"\r\n\r\nconst SignIn = (props) => {\r\n  // set context user data\r\n  const { email, setEmail, setAuth } = props;\r\n  const [loader, setLoader] = useState(false)\r\n  // for redirecting\r\n  const history = useHistory()\r\n  // pasword entered\r\n  const [password, setPassword] = useState('')\r\n  const signin = () => {\r\n    // Password should not be empty\r\n    if (!password)\r\n      return toast.error(\"Password can't be empty\")\r\n    // Email should not be empty\r\n    if (!email)\r\n      return toast.error(\"Email can't be empty\")\r\n    setLoader(true)\r\n\r\n    // fetch server sign for authorization\r\n    axios({\r\n      url: `${url}/signin`,\r\n      method: 'POST',\r\n      data: {\r\n        email,\r\n        password\r\n      },\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }).then(data => {\r\n      console.log(data)\r\n      setAuth(true)\r\n      setLoader(false)\r\n      toast.success(\"Signed in Successfully\", {\r\n        autoClose: 2000,\r\n        closeOnClick: false,\r\n        pauseOnHover: false,\r\n      });\r\n      setAuth(true)\r\n      // set token at local Storage for future services check\r\n      localStorage.setItem('TeamsToken', data.data.token)\r\n      setTimeout(() => {\r\n        history.push(\"/\")\r\n      }, 2000);\r\n\r\n    }).catch(err => {\r\n      // if not verified\r\n      toast.error(err.response.data.error)\r\n      setLoader(false)\r\n    })\r\n  }\r\n  return (<>\r\n    <div className=\"sign-in-parent\">\r\n      <div className=\"signin-logo-box\">\r\n        <img src={MicrosoftTeams} className=\"logo-signin\" alt=\"Microsoft Teams\" />\r\n        <h2>Microsoft Teams</h2>\r\n      </div>\r\n      <div className=\"signin-entry-box\">\r\n        <img src={Avatar} className=\"avatar-signin\" alt=\"Avatar\" />\r\n        <h2 className=\"signin-head\">Sign In</h2>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter Email ID\"\r\n          className=\"email-input\"\r\n          value={email}\r\n          onChange={(e) => { setEmail(e.target.value) }}\r\n\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter Password\"\r\n          className=\"password-input\"\r\n          onChange={(e) => { setPassword(e.target.value) }}\r\n\r\n        />\r\n\r\n        {loader && <Loader\r\n          type=\"BallTriangle\"\r\n          color=\"#00BFFF\"\r\n          height={30}\r\n          width={30} />}\r\n        <div className=\"signin-entry-options\">\r\n          <button\r\n            className=\"signin-entry-buttons\"\r\n            onClick={() => {\r\n              signin()\r\n            }}\r\n          >Sign in</button>\r\n\r\n          <button\r\n            className=\"signin-entry-buttons\"\r\n            onClick={() => {\r\n              history.push(\"/signup\")\r\n            }}\r\n          >\r\n            Sign Up\r\n          </button>\r\n        </div>\r\n        <Link to=\"/forgotpassword\" className=\"forgot-password\">Forgot Password?</Link>\r\n      </div>\r\n      <img src={Group_Connect} alt=\"group connect\" className=\"signin-bottom-vector\" />\r\n    </div>\r\n    <ToastContainer />\r\n  </>\r\n  )\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    email: state.userDetails.email,\r\n    auth: state.userDetails.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n\r\n    setEmail: data => {\r\n      dispatch({\r\n        type: 'SET_EMAIL',\r\n        email: data,\r\n      })\r\n    },\r\n    setAuth: data => {\r\n      dispatch({\r\n        type: 'SET_AUTH',\r\n        auth: data,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport Avatar from \"../assets/avatar.png\";\r\nimport Group_Connect from \"../assets/home-right-vector.png\";\r\nimport { connect } from 'react-redux';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport \"../styles/signup.css\"\r\nimport MicrosoftTeams from \"../assets/microsoft-teams.svg\";\r\nimport axios from 'axios';\r\nimport Loader from \"react-loader-spinner\";\r\nimport { sha256 } from \"js-sha256\";\r\nimport { prodUrl as url } from \"../Config/config.json\"\r\n\r\nconst Signup = (props) => {\r\n    // set context user data\r\n    const { email, setEmail, name, setName } = props;\r\n    // for redirect\r\n    const history = useHistory()\r\n    const [loader,setLoader] = useState(false)\r\n    // pasword entered\r\n    const [password, setPassword] = useState('')\r\n    // confirm pasword entered\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    // otp verified or not\r\n    const [otpVerified, SetOtpVerified] = useState(false)\r\n    // otp sent to mail or not\r\n    const [otpSent, setOtpSent] = useState(false)\r\n    // received sha256 hashed otp\r\n    const [receivedOtp,setReceivedOtp] = useState('')\r\n    const [clientOtp,setClientOtp] = useState('')\r\n\r\n    // otp hashed receive and email id sent\r\n    const sentOtp = () =>{\r\n        setLoader(true)\r\n        axios({\r\n            url:`${url}/verifyotp`,\r\n            data:{\r\n                email\r\n            },\r\n            method:'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(data=>{\r\n            if(data.data.hash)\r\n            {\r\n            setReceivedOtp(data.data.hash)\r\n            setOtpSent(true)\r\n            toast.info(`OTP Sent to ${email}`)\r\n            }\r\n            else\r\n            {\r\n                toast.error(data.data.error)\r\n            }\r\n            setLoader(false)\r\n        })\r\n    }\r\n\r\n    // verification of otp \r\n    const verifyotp = () =>{\r\n        if(sha256(clientOtp)==receivedOtp)\r\n        {\r\n            toast.info(\"OTP Verified Successfully\")\r\n            SetOtpVerified(true)\r\n        }\r\n        else{\r\n            toast.error(\"Wrong OTP\")\r\n        }\r\n    }\r\n    const signup = () => {\r\n        if(!otpVerified)\r\n        return\r\n        // Password should not be empty    \r\n        if (!password)\r\n            return toast.error(\"Password can't be empty\")\r\n        // email should not be empty\r\n        if (!email)\r\n            return toast.error(\"Email can't be empty\")\r\n        if (!name)\r\n            return toast.error(\"name can't be empty\")\r\n        if (confirmPassword !== password)\r\n            return toast.error(\"Confirm password does'nt match with password\")\r\n        var mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n        var passwordformat = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n        // Validate email id\r\n        if (!mailformat.test(email))\r\n            return toast.error(\"Please enter valid email !\")\r\n        // Validate password \r\n        if (!passwordformat.test(password))\r\n            return toast.error(\"Password must contain minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character !\")\r\n        setLoader(true)\r\n        //signup via server\r\n            axios({\r\n            url: `${url}/signup`,\r\n            method: 'POST',\r\n            data: {\r\n                name,\r\n                email,\r\n                password\r\n            },\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(data => {\r\n            setLoader(false)\r\n            toast.success(\"Registered Successfully\", {\r\n                autoClose: 2000,\r\n                closeOnClick: false,\r\n                pauseOnHover: false,\r\n            });\r\n            setTimeout(() => {\r\n                history.push(\"/signin\")\r\n            }, 2000);\r\n\r\n        }).catch(data=>{\r\n            toast.error(data.response.data.error)\r\n            setLoader(false)\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"sign-up-parent\">\r\n                <div className=\"signup-logo-box\">\r\n                    <img src={MicrosoftTeams} className=\"logo-signup\" alt=\"Microsoft Teams\" />\r\n                    <h2>Microsoft Teams</h2>\r\n                </div>\r\n                <div className=\"signup-entry-box\">\r\n                    <img src={Avatar} className=\"avatar-signup\" alt=\"Avatar\" />\r\n                    <h2 className=\"signup-head\">Sign Up</h2>\r\n                    {!otpVerified && <h4>OTP Verification</h4>}\r\n                    {!otpVerified && !otpSent&&<input\r\n                        type=\"email\"\r\n                        placeholder=\"Enter Email ID\"\r\n                        className=\"email-input\"\r\n                        value={email}\r\n                        onChange={(e) => { setEmail(e.target.value) }}\r\n\r\n                    />}\r\n                    {\r\n                        otpSent&&!otpVerified&&<h6>OTP sent to {email}</h6>\r\n                    }\r\n                    {\r\n                        otpSent &&!otpVerified&& <input\r\n                        type=\"password\"\r\n                        placeholder=\"Enter OTP\"\r\n                        className=\"name-input\"\r\n                        value={clientOtp}\r\n                        onChange={(e) => { setClientOtp(e.target.value) }}\r\n\r\n                    />\r\n                    }\r\n                    {\r\n                        otpSent &&!otpVerified&&\r\n                        <h6>Please check spams, if email not found !</h6>\r\n                    }\r\n                    {otpVerified && <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Name\"\r\n                        className=\"name-input\"\r\n                        value={name}\r\n                        onChange={(e) => { setName(e.target.value) }}\r\n\r\n                    />}\r\n                    {otpVerified && <input\r\n                        type=\"password\"\r\n                        placeholder=\"Enter Password\"\r\n                        className=\"password-input\"\r\n                        value={password}\r\n                        onChange={(e) => { setPassword(e.target.value) }}\r\n\r\n                    />}\r\n                    {otpVerified && <input\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        className=\"password-input\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => { setConfirmPassword(e.target.value) }}\r\n\r\n                    />}\r\n                    {\r\n                        confirmPassword !== password &&\r\n                        <h5 style={{ color: 'red' }}>\r\n                            *Confirm password does'nt match with password\r\n                        </h5>\r\n                    }\r\n                    {otpVerified && <h6 className=\"signup-password-format\">\r\n                        Note: Password must contain minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character\r\n                    </h6>}\r\n                    {loader&&<Loader \r\n                        type=\"BallTriangle\" \r\n                        color=\"#00BFFF\" \r\n                        height={30} \r\n                        width={30} />}\r\n                    <div className=\"signup-entry-options\">\r\n                        \r\n                        {!otpSent &&\r\n                            <button\r\n                                className=\"signup-entry-buttons\"\r\n                                onClick={() => {\r\n                                    sentOtp()\r\n                                }}\r\n                            >\r\n                                Send OTP\r\n                            </button>\r\n                        }\r\n                        {\r\n                            otpSent&&!otpVerified&&<button\r\n                            className=\"signup-entry-buttons\"\r\n                            onClick={() => {\r\n                                verifyotp()\r\n                            }}\r\n                        >\r\n                            Verify OTP\r\n                        </button>\r\n                        }\r\n                        {otpVerified && <button\r\n                            className=\"signup-entry-buttons\"\r\n                            onClick={() => {\r\n                                signup()\r\n                            }}\r\n                        >\r\n                            Sign Up\r\n                        </button>}\r\n                    </div>\r\n                    <h5>If already have account, <Link to={\"/signin\"}>Sign In</Link></h5>\r\n                </div>\r\n                <img src={Group_Connect} alt=\"group connect\" className=\"signup-bottom-vector\" />\r\n\r\n            </div>\r\n            <ToastContainer />\r\n        </>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        email: state.userDetails.email,\r\n        name: state.userDetails.name\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n        setEmail: data => {\r\n            dispatch({\r\n                type: 'SET_EMAIL',\r\n                email: data,\r\n            })\r\n        },\r\n        setName: data => {\r\n            dispatch({\r\n                type: 'SET_NAME',\r\n                name: data,\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)","import React from 'react'\r\nimport {Redirect, Route} from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\n\r\nclass ProtectedRoute extends React.Component {\r\n    render() {\r\n        \r\n        const {component: Component, ...props} = this.props;\r\n        // If authorized then move ahead or redirect\r\n        return (\r\n            <Route {...props} render={props => (this.props.auth ? <Component {...props} /> : <Redirect to='/signin' />)} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.userDetails.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, undefined)(ProtectedRoute);","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { ProSidebar, SidebarHeader, SidebarFooter, SidebarContent } from 'react-pro-sidebar';\r\nimport { useHistory } from 'react-router-dom'\r\nimport \"../styles/main-component.css\"\r\nimport MicrosoftTeams from \"../assets/microsoft-teams.svg\";\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { v1 as uuid } from \"uuid\";\r\nimport { io } from \"socket.io-client\"\r\nimport Modal from 'react-modal';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { Icon } from '@iconify/react';\r\nimport Switch from \"react-switch\";\r\nimport sendFilled from '@iconify/icons-carbon/send-filled';\r\nimport menuIcon from '@iconify/icons-carbon/menu';\r\nimport desktopArrowRight24Regular from '@iconify/icons-fluent/desktop-arrow-right-24-regular';\r\nimport bxLogOut from '@iconify/icons-bx/bx-log-out';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport Loader from \"react-loader-spinner\";\r\nimport joinOuter from '@iconify/icons-carbon/join-outer';\r\nimport { prodUrl as url } from \"../Config/config.json\"\r\nimport bxsAddToQueue from '@iconify/icons-bx/bxs-add-to-queue';\r\n\r\nconst MainComponent = (props) => {\r\n    const {\r\n        socket,\r\n        setSocket,\r\n        name,\r\n        setName,\r\n        userId,\r\n        setUserId,\r\n        setAuth,\r\n        joiningRoom,\r\n        setJoiningRoom,\r\n        joiningPath,\r\n        setJoiningPath\r\n    } = props\r\n    // set joined rooms\r\n    const [rooms, setRooms] = useState([])\r\n    // set selected room\r\n    const [room, setRoom] = useState(undefined)\r\n    // store data of selected room\r\n    const roomRef = useRef(undefined)\r\n    // store data of all rooms\r\n    const roomsRef = useRef([])\r\n    // set chats for selected room\r\n    const [chats, setChats] = useState([])\r\n    // selected room's ID\r\n    const [roomID, setRoomId] = useState('')\r\n    // message for chat\r\n    const [message, setMessage] = useState('')\r\n    const [modalIsOpen, setmodalIsOpen] = useState(false)\r\n    const [modalCreateRoomIsOpen, setmodalCreateRoomIsOpen] = useState(false)\r\n    const [roomName, setRoomName] = useState('')\r\n    const [roomSideBar, setRoomSideBar] = useState(window.screen.width > 660)\r\n    // ref to scroll down whenever a message arrive\r\n    const messagesEndRef = useRef(null)\r\n    const history = useHistory()\r\n    const [customBackground, setCustomBackground] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n\r\n    const customStylesModal = {\r\n        overlay: {\r\n            backgroundColor: 'rgba(0,0,0,0.7)',\r\n            zIndex: 2\r\n        },\r\n        content: {\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            padding: '20px'\r\n        },\r\n    };\r\n\r\n    // if socket does not exist then create one and update in database\r\n    useEffect(() => {\r\n        if (joiningRoom && socket != null) {\r\n            joinRoom(joiningRoom)\r\n\r\n        }\r\n        if (!socket) {\r\n            var socketNew = io.connect(`${url}`)\r\n\r\n            socketNew.on(\"connect\", () => {\r\n                axios({\r\n                    url: `${url}/updateSocket`,\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${localStorage.getItem('TeamsToken')}`\r\n                    },\r\n                    data: {\r\n                        \"socketId\": socketNew.id\r\n                    }\r\n                }).then(data => {\r\n                    ;\r\n                })\r\n                setSocket(socketNew)\r\n\r\n            })\r\n\r\n        }\r\n\r\n        // get chats for all room joined\r\n        axios({\r\n            url: `${url}/getChats`,\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem('TeamsToken')}`\r\n            }\r\n        }).then(data => {\r\n            console.log(data)\r\n            setName(data.data.user.name)\r\n            setUserId(data.data.user._id)\r\n            roomsRef.current = roomsRef.current.concat(data.data.rooms)\r\n            setRooms(roomsRef.current)\r\n\r\n        })\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            // redirect if url says so\r\n            if (joiningRoom) {\r\n                joinRoom(joiningRoom)\r\n\r\n            }\r\n            // on receiving message\r\n            socket.on(\"receivedMessage\", (payload) => {\r\n\r\n                const { name, message, userId, roomID } = payload\r\n\r\n                if (roomRef.current && roomRef.current.roomID == roomID) {\r\n                    var roomUpdate = roomRef.current\r\n                    roomUpdate.chats = [...roomUpdate.chats, { name, message, userId: userId }]\r\n                    roomRef.current = roomUpdate\r\n                    setChats(roomUpdate.chats)\r\n                    setRoom(roomRef.current)\r\n                }\r\n                for (var i = 0; i < roomsRef.current.length; i++) {\r\n                    if (roomsRef.current[i].roomID == roomID) {\r\n                        roomsRef.current[i].chats = [...roomsRef.current[i].chats, { name, message, userId: userId }]\r\n                    }\r\n                }\r\n                // roomsRef.current = roomsUpdate\r\n                setRooms(roomsRef.current)\r\n                scrollToBottom()\r\n            })\r\n        }\r\n    }, [socket])\r\n\r\n    //create room\r\n    const createRoom = () => {\r\n        setLoader(true)\r\n        axios({\r\n            url: `${url}/createRoom`,\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem('TeamsToken')}`\r\n            },\r\n            data: {\r\n                roomID: uuid(),\r\n                socketId: socket.id,\r\n                roomName: roomName || undefined\r\n            }\r\n        }).then(data => {\r\n            setLoader(false)\r\n            const roomsUpdate = [...roomsRef.current, data.data]\r\n            roomsRef.current = roomsUpdate\r\n            setRooms(roomsRef.current)\r\n            toast.info(`Created Room ${data.data.roomName}`, {\r\n                position: 'top-left'\r\n            })\r\n            setmodalCreateRoomIsOpen(false)\r\n        })\r\n    }\r\n\r\n    // join room , also if redirecting then do it\r\n    const joinRoom = (RoomJoiningID) => {\r\n\r\n        if (!RoomJoiningID)\r\n            return toast.error(\"Room ID can't be empty!\")\r\n        var roomIdFormat = /[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}/;\r\n        if (!roomIdFormat.test(RoomJoiningID))\r\n            return toast.error(\"Incorrect roomID\");\r\n        setLoader(true)\r\n        axios({\r\n            url: `${url}/joinRoom`,\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem('TeamsToken')}`\r\n            },\r\n            data: {\r\n                roomID: RoomJoiningID,\r\n                socketId: socket.id\r\n            }\r\n        }).then(data => {\r\n            setLoader(false)\r\n            const roomsUpdate = [...roomsRef.current, data.data]\r\n            roomsRef.current = roomsUpdate\r\n            setRooms(roomsRef.current)\r\n            setmodalIsOpen(false)\r\n            toast.info(`Joined Room \"${data.data.roomName}\"`, {\r\n                position: 'top-left'\r\n            })\r\n            if (joiningRoom) {\r\n                setJoiningRoom(null)\r\n                if (joiningPath) {\r\n                    // redirect\r\n                    var jp = joiningPath\r\n                    setJoiningPath(null,()=>{\r\n                        history.push(`${jp}/${RoomJoiningID}`)\r\n                    })\r\n\r\n                    \r\n                }\r\n            }\r\n\r\n        }).catch(err => {\r\n            setLoader(false)\r\n            toast.error(err.response.data.error)\r\n            // redirect if room exists\r\n            if (joiningRoom && err.response.data.error != \"Room doesn't exist!\") {\r\n                setJoiningRoom(null)\r\n                if (joiningPath) {\r\n                    var jp = joiningPath\r\n                    setJoiningPath(null,()=>{\r\n                        history.push(`${jp}/${RoomJoiningID}`)\r\n                    })\r\n\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const selectRoom = (e) => {\r\n        // select room\r\n        var roomID = e.target.dataset.roomid;\r\n        var room = rooms.filter(room => room.roomID == roomID)\r\n        setChats(room[0].chats)\r\n        setRoom(room[0])\r\n        roomRef.current = room[0];\r\n        if (messagesEndRef.current)\r\n            scrollToBottom()\r\n        if (window.screen.width <= 660)\r\n            setRoomSideBar(false)\r\n    }\r\n    const sendMessage = (sendMessage) => {\r\n        // send message to others\r\n        const payload = { name, message: sendMessage, userId: userId, roomID: room.roomID };\r\n        socket.emit(\"send message\", payload);\r\n        const roomUpdate = roomRef.current;\r\n        const chatUpdate = chats;\r\n        chatUpdate.push({ name, message, userId: userId })\r\n        roomUpdate.chats = chatUpdate\r\n        for (var i = 0; i < roomsRef.current.length; i++)\r\n            if (roomsRef.current[i].roomID == room.roomID) {\r\n                roomsRef.current[i].chats = chatUpdate;\r\n            }\r\n\r\n        roomRef.current = roomUpdate\r\n        setChats(chatUpdate)\r\n        setRoom(roomRef.current)\r\n        setRooms(roomsRef.current)\r\n        scrollToBottom()\r\n    }\r\n    //Automatic scroll to bottom\r\n    useEffect(() => {\r\n        scrollToBottom()\r\n    })\r\n    const scrollToBottom = () => {\r\n        if (messagesEndRef.current)\r\n            messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-component-parent\">\r\n            {/* Modal to join room  */}\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onRequestClose={() => {\r\n                    setmodalIsOpen(false)\r\n                }}\r\n                style={customStylesModal}\r\n                id=\"modal-main-component\"\r\n                contentLabel=\"Name Modal\"\r\n            >\r\n                <h3>Join Room</h3>\r\n                <div className=\"modal-content-home\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"modal-input-main-component\"\r\n                        placeholder=\"Enter room ID\"\r\n                        value={roomID}\r\n                        onChange={(e) => {\r\n                            setRoomId(e.target.value)\r\n                        }}\r\n                    />\r\n                </div>\r\n                {loader && <Loader\r\n                    type=\"BallTriangle\"\r\n                    color=\"#00BFFF\"\r\n                    height={30}\r\n                    width={30} />}\r\n                <button className=\"join-room-main-chat\"\r\n                    onClick={() => {\r\n                        joinRoom(roomID)\r\n                    }}>\r\n                    Join room\r\n                </button>\r\n            </Modal>\r\n            {/* Modal to create room */}\r\n            <Modal\r\n                isOpen={modalCreateRoomIsOpen}\r\n                onRequestClose={() => {\r\n                    setmodalCreateRoomIsOpen(false)\r\n                }}\r\n                style={customStylesModal}\r\n                id=\"modal-main-component\"\r\n                contentLabel=\"Name Modal\"\r\n            >\r\n                <h3>Create Room</h3>\r\n                <div className=\"modal-content-home\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"modal-input-main-component\"\r\n                        placeholder=\"Enter room name (optional)\"\r\n                        value={roomName}\r\n                        onChange={(e) => {\r\n                            setRoomName(e.target.value)\r\n                        }}\r\n                    />\r\n                </div>\r\n                {loader && <Loader\r\n                    type=\"BallTriangle\"\r\n                    color=\"#00BFFF\"\r\n                    height={30}\r\n                    width={30} />}\r\n                <button className=\"join-room-main-chat\"\r\n                    onClick={() => {\r\n                        createRoom()\r\n                    }}>\r\n                    Create room\r\n                </button>\r\n            </Modal>\r\n\r\n            <div className=\"main-component-header\">\r\n                <div className=\"header-logo-box\">\r\n                    <Icon icon={menuIcon}\r\n                        style={{ fontSize: '40px' }}\r\n                        onClick={() => {\r\n                            setRoomSideBar(!roomSideBar)\r\n                        }}\r\n                    />\r\n                    <img src={MicrosoftTeams} className=\"logo-main-component\" alt=\"Microsoft Teams\" />\r\n                    <h3>Microsoft Teams</h3>\r\n\r\n                </div>\r\n                <div className=\"top-header-side-options\">\r\n                    <span className=\"room-join-options-hover\" >\r\n                        +\r\n                        <ul className=\"room-join-options\">\r\n                            <li onClick={() => {\r\n                                setmodalCreateRoomIsOpen(true)\r\n                            }}>\r\n                                <Icon icon={bxsAddToQueue} /><span>Create Room</span></li>\r\n                            <li\r\n                                onClick={() => {\r\n                                    setmodalIsOpen(true)\r\n                                }}>\r\n                                <Icon icon={joinOuter} />\r\n                                <span>\r\n                                    Join Room\r\n                                </span>\r\n                            </li>\r\n                        </ul>\r\n\r\n                    </span>\r\n                    <Icon\r\n                        data-tip=\"Sign Out\"\r\n                        onClick={() => {\r\n                            setAuth(false)\r\n                            localStorage.removeItem('TeamsToken')\r\n                            history.push(\"/signin\")\r\n                        }}\r\n                        icon={bxLogOut} />\r\n                </div>\r\n            </div>\r\n            <div className=\"main-component-content\">\r\n                <ProSidebar collapsed={!roomSideBar} collapsedWidth=\"0px\" className=\"main-chat-pro-sidebar\">\r\n                    <SidebarHeader className=\"main-chat-pro-header\">\r\n                        <h4>\r\n                            Rooms\r\n                        </h4>\r\n                    </SidebarHeader>\r\n                    <SidebarContent className=\"main-chat-pro-content\">\r\n                        {rooms.map(roomEach => {\r\n                            return (\r\n                                <div className=\"sidebar-room\"\r\n                                    data-roomid={roomEach.roomID}\r\n                                    id={room && room.roomID == roomEach.roomID ? 'selectedRoom' : 'null'}\r\n                                    onClick={(e) => {\r\n                                        selectRoom(e)\r\n                                    }}\r\n                                >\r\n                                    <div className=\"room-initial\"\r\n                                        data-roomid={roomEach.roomID}\r\n                                        onClick={(e) => {\r\n                                            selectRoom(e)\r\n                                        }}\r\n                                    >\r\n                                        {roomEach.roomName.slice(0, 1).toUpperCase()}\r\n                                    </div>\r\n                                    <div className=\"room-name\"\r\n                                        data-roomid={roomEach.roomID}\r\n                                        onClick={(e) => {\r\n                                            selectRoom(e)\r\n                                        }}>\r\n                                        {roomEach.roomName}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n\r\n                        }\r\n                    </SidebarContent>\r\n                </ProSidebar>\r\n                {room ? <ProSidebar collapsed={false} collapsedWidth=\"0px\" className=\"main-chat-chats-box\">\r\n                    <SidebarHeader className=\"main-chat-chats-box-header\">\r\n                        <div className=\"room-detail\">\r\n                            <div className=\"room-initial-chat-box-header\">\r\n                                {room.roomName.slice(0, 1).toUpperCase()}\r\n                            </div>\r\n                            <div className=\"room-name\">\r\n                                <h4>{room.roomName}</h4>\r\n                                <h5>Room id : {room.roomID}</h5>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"room-options-chat\">\r\n                            <Switch\r\n                                className=\"background-switcher-chat\"\r\n                                uncheckedIcon={false}\r\n                                checkedIcon={false}\r\n                                height={20}\r\n                                width={40}\r\n                                data-tip=\"Change Wallpaper\"\r\n                                onChange={(val) => {\r\n                                    setCustomBackground(val)\r\n                                    if (val)\r\n                                        document.\r\n                                            getElementsByClassName('main-chat-chats-box-content')[0].\r\n                                            style.backgroundImage = `url(\"https://picsum.photos/1920/1080\")`\r\n                                    else\r\n                                        document.\r\n                                            getElementsByClassName('main-chat-chats-box-content')[0].\r\n                                            style.backgroundImage = null\r\n                                }} checked={customBackground}\r\n                            />\r\n                            <div className=\"join-meet-outer-box\"\r\n                                data-tip=\"Join Meeting\"\r\n                            >\r\n                                <div className=\"join-meet-outer\"\r\n                                    data-tip=\"Join Meeting\"\r\n                                    data-roomid={room.roomID}\r\n                                    onClick={(e) => {\r\n                                        history.push(`/home/${e.target.dataset.roomid}`)\r\n                                    }}\r\n                                ></div>\r\n                                <Icon\r\n                                    icon={desktopArrowRight24Regular}\r\n                                    className=\"join-meet-main-chat\"\r\n                                    data-tip=\"Join Meeting\"\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                    </SidebarHeader>\r\n                    <SidebarContent className=\"main-chat-chats-box-content\">\r\n                        {chats.map(chat => {\r\n                            return (\r\n                                <div className=\"sidebar-room-chat\" id={chat.userId == userId ? 'shiftChat' : null}>\r\n                                    <div className=\"room-initial-chat\" style={{ backgroundColor: '#333' }}>\r\n                                        {chat.name.slice(0, 1).toUpperCase()}\r\n                                    </div>\r\n                                    <div className=\"chat-user\">\r\n                                        <h4 className=\"chat-user-name\">\r\n                                            {chat.userId == userId ? 'You' : chat.name}\r\n                                        </h4>\r\n                                        <div className=\"chat-user-message\">\r\n                                            {chat.message}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n\r\n                        }\r\n                        <div ref={messagesEndRef} ></div>\r\n                    </SidebarContent>\r\n                    <SidebarFooter className=\"main-chat-chats-box-footer\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Type here\"\r\n                            className=\"chat-entry\"\r\n                            onKeyPress={(e) => {\r\n                                e = e || window.event;\r\n                                if (e.key == \"Enter\") {\r\n                                    sendMessage(message);\r\n                                    setMessage(\"\")\r\n                                }\r\n                            }}\r\n                            onChange={(e) => {\r\n                                setMessage(e.target.value)\r\n                            }}\r\n                            value={message}\r\n                        />\r\n                        <Icon\r\n                            icon={sendFilled}\r\n                            style={{ color: '#333' }}\r\n                            onClick={() => {\r\n                                sendMessage(message);\r\n                                setMessage('')\r\n                            }} />\r\n                    </SidebarFooter>\r\n                </ProSidebar> :\r\n                    <div className=\"no-room-selected\">\r\n                        <h1>Select Your Room !</h1>\r\n                        <h3>OR</h3>\r\n                        <h5>Join or Create Room by clicking on \"+\"</h5>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <ToastContainer />\r\n            <ReactTooltip effect=\"solid\" place=\"bottom\" />\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        name: state.userDetails.name,\r\n        socket: state.userDetails.socket,\r\n        userId: state.userDetails.userId,\r\n        joiningRoom: state.userDetails.joiningRoom,\r\n        joiningPath: state.userDetails.joiningPath,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n        setSocket: data => {\r\n            dispatch({\r\n                type: 'SET_SOCKET',\r\n                socket: data,\r\n            })\r\n        },\r\n        setName: data => {\r\n            dispatch({\r\n                type: 'SET_NAME',\r\n                name: data,\r\n            })\r\n        },\r\n        setUserId: data => {\r\n            dispatch({\r\n                type: 'SET_USER_ID',\r\n                userId: data,\r\n            })\r\n        },\r\n        setAuth: data => {\r\n            dispatch({\r\n                type: 'SET_AUTH',\r\n                auth: data,\r\n            })\r\n        },\r\n        setJoiningRoom: data => {\r\n            dispatch({\r\n                type: 'SET_JOINING_ROOM',\r\n                joiningRoom: data,\r\n            })\r\n        },\r\n        setJoiningPath: data => {\r\n            dispatch({\r\n                type: 'SET_JOINING_Path',\r\n                joiningPath: data,\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainComponent)","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport Avatar from \"../assets/avatar.png\";\r\nimport Group_Connect from \"../assets/home-right-vector.png\";\r\nimport { connect } from 'react-redux';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport \"../styles/signup.css\"\r\nimport MicrosoftTeams from \"../assets/microsoft-teams.svg\";\r\nimport axios from 'axios';\r\nimport Loader from \"react-loader-spinner\";\r\nimport { sha256 } from \"js-sha256\";\r\nimport { prodUrl as url } from \"../Config/config.json\"\r\n\r\nconst ForgotPassword = (props) => {\r\n    // set context user data\r\n    const [email, setEmail]=useState('');\r\n    // for redirect\r\n    const history = useHistory()\r\n    const [loader,setLoader] = useState(false)\r\n    // pasword entered\r\n    const [password, setPassword] = useState('')\r\n    // confirm pasword entered\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    // otp verified or not\r\n    const [otpVerified, SetOtpVerified] = useState(false)\r\n    // otp sent to mail or not\r\n    const [otpSent, setOtpSent] = useState(false)\r\n    // received sha256 hashed otp\r\n    const [receivedOtp,setReceivedOtp] = useState('')\r\n    const [clientOtp,setClientOtp] = useState('')\r\n\r\n    // otp hashed receive and email id sent\r\n    const sentOtp = () =>{\r\n        \r\n        setLoader(true)\r\n        axios({\r\n            url:`${url}/verifyotp`,\r\n            data:{\r\n                email\r\n            },\r\n            method:'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(data=>{\r\n            if(data.data.hash)\r\n            {\r\n            setReceivedOtp(data.data.hash)\r\n            setOtpSent(true)\r\n            toast.info(`OTP Sent to ${email}`)\r\n            }\r\n            else\r\n            {\r\n                toast.error(data.data.error)\r\n            }\r\n            setLoader(false)\r\n        })\r\n    }\r\n\r\n    // verification of otp \r\n    const verifyotp = () =>{\r\n        if(sha256(clientOtp)==receivedOtp)\r\n        {\r\n            toast.info(\"OTP Verified Successfully\")\r\n            SetOtpVerified(true)\r\n        }\r\n        else{\r\n            toast.error(\"Wrong OTP\")\r\n        }\r\n    }\r\n    const forgotpassword = () => {\r\n        if(!otpVerified)\r\n        return\r\n        // Password should not be empty    \r\n        if (!password)\r\n            return toast.error(\"Password can't be empty\")\r\n        // email should not be empty\r\n        if (!email)\r\n            return toast.error(\"Email can't be empty\")\r\n        if (confirmPassword !== password)\r\n            return toast.error(\"Confirm password does'nt match with password\")\r\n        var mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n        var passwordformat = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n        // Validate email id\r\n        if (!mailformat.test(email))\r\n            return toast.error(\"Please enter valid email !\")\r\n        // Validate password \r\n        if (!passwordformat.test(password))\r\n            return toast.error(\"Password must contain minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character !\")\r\n        setLoader(true)\r\n        //signup via server\r\n            axios({\r\n            url: `${url}/forgotpassword`,\r\n            method: 'POST',\r\n            data: {\r\n                email,\r\n                password\r\n            },\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(data => {\r\n            setLoader(false)\r\n            toast.success(\"Password Updated Successfully\", {\r\n                autoClose: 2000,\r\n                closeOnClick: false,\r\n                pauseOnHover: false,\r\n            });\r\n            setTimeout(() => {\r\n                history.push(\"/signin\")\r\n            }, 2000);\r\n\r\n        }).catch(data=>{\r\n            toast.error(data.response.data.error)\r\n            setLoader(false)\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"sign-up-parent\">\r\n                <div className=\"signup-logo-box\">\r\n                    <img src={MicrosoftTeams} className=\"logo-signup\" alt=\"Microsoft Teams\" />\r\n                    <h2>Microsoft Teams</h2>\r\n                </div>\r\n                <div className=\"signup-entry-box\">\r\n                    <img src={Avatar} className=\"avatar-signup\" alt=\"Avatar\" />\r\n                    <h2 className=\"signup-head\">Forgot Password</h2>\r\n                    {!otpVerified && <h4>OTP Verification</h4>}\r\n                    {!otpVerified && !otpSent&&<input\r\n                        type=\"email\"\r\n                        placeholder=\"Enter Email ID\"\r\n                        className=\"email-input\"\r\n                        value={email}\r\n                        onChange={(e) => { setEmail(e.target.value) }}\r\n\r\n                    />}\r\n                    {\r\n                        otpSent&&!otpVerified&&<h6>OTP sent to {email}</h6>\r\n                    }\r\n                    {\r\n                        otpSent &&!otpVerified&& <input\r\n                        type=\"password\"\r\n                        placeholder=\"Enter OTP\"\r\n                        className=\"name-input\"\r\n                        value={clientOtp}\r\n                        onChange={(e) => { setClientOtp(e.target.value) }}\r\n\r\n                    />\r\n                    }\r\n                    {\r\n                        otpSent &&!otpVerified&&\r\n                        <h6>Please check spams, if email not found !</h6>\r\n                    }\r\n\r\n                    {otpVerified && <input\r\n                        type=\"password\"\r\n                        placeholder=\"Enter Password\"\r\n                        className=\"password-input\"\r\n                        value={password}\r\n                        onChange={(e) => { setPassword(e.target.value) }}\r\n\r\n                    />}\r\n                    {otpVerified && <input\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        className=\"password-input\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => { setConfirmPassword(e.target.value) }}\r\n\r\n                    />}\r\n                    {\r\n                        confirmPassword !== password &&\r\n                        <h5 style={{ color: 'red' }}>\r\n                            *Confirm password does'nt match with password\r\n                        </h5>\r\n                    }\r\n                    {otpVerified && <h6 className=\"signup-password-format\">\r\n                        Note: Password must contain minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character\r\n                    </h6>}\r\n                    {loader&&<Loader \r\n                        type=\"BallTriangle\" \r\n                        color=\"#00BFFF\" \r\n                        height={30} \r\n                        width={30} />}\r\n                    <div className=\"signup-entry-options\">\r\n                        \r\n                        {!otpSent &&\r\n                            <button\r\n                                className=\"signup-entry-buttons\"\r\n                                onClick={() => {\r\n                                    sentOtp()\r\n                                }}\r\n                            >\r\n                                Send OTP\r\n                            </button>\r\n                        }\r\n                        {\r\n                            otpSent&&!otpVerified&&<button\r\n                            className=\"signup-entry-buttons\"\r\n                            onClick={() => {\r\n                                verifyotp()\r\n                            }}\r\n                        >\r\n                            Verify OTP\r\n                        </button>\r\n                        }\r\n                        {otpVerified && <button\r\n                            className=\"signup-entry-buttons\"\r\n                            onClick={() => {\r\n                                forgotpassword()\r\n                            }}\r\n                        >\r\n                            Submit\r\n                        </button>}\r\n                    </div>\r\n                    <h5>If already have account, <Link to={\"/signin\"}>Sign In</Link></h5>\r\n                </div>\r\n                <img src={Group_Connect} alt=\"group connect\" className=\"signup-bottom-vector\" />\r\n\r\n            </div>\r\n            <ToastContainer />\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(null,null)(ForgotPassword)","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\r\nimport Home from \"./components/Home\"\r\nimport Meet from \"./components/Meet\"\r\nimport SignIn from \"./components/SignIn\"\r\nimport SignUp from \"./components/SignUp\"\r\nimport ProtectedRoute from \"./ProtectedRoute/ProtectedRoute\"\r\nimport { prodUrl as url } from \"./Config/config.json\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport MainComponent from \"./components/MainComponent\"\r\nimport ForgotPassword from \"./components/ForgotPassword\";\r\n\r\nconst Routing = (props) => {\r\n  const history = useHistory();\r\n  const { auth, setJoiningRoom, setJoiningPath } = props\r\n\r\n  useEffect(() => {\r\n    const urlArray = window.location.href.split(\"/\")\r\n    // Redirect to meeting and join room if url was shared \r\n    var roomIdFormat = /[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}/;\r\n    if (roomIdFormat.test(urlArray[urlArray.length - 1])) {\r\n      setJoiningRoom(urlArray[urlArray.length - 1])\r\n      const path = urlArray.find(ele => ele === 'home' || ele === 'teams')\r\n      if (path)\r\n        setJoiningPath('home')\r\n      history.push(\"/\")\r\n    }\r\n    else if (roomIdFormat.test(urlArray[urlArray.length - 2])) {\r\n      setJoiningRoom(urlArray[urlArray.length - 2])\r\n      const path = urlArray.find(ele => ele === 'home' || ele === 'teams')\r\n      if (path)\r\n        setJoiningPath(path)\r\n      history.push(\"/\")\r\n    }\r\n    // if not authorized then redirect to sign in\r\n    if (!auth)\r\n      history.push(\"/signin\")\r\n  }, [])\r\n  return (\r\n    <>\r\n      {\r\n        !auth\r\n          ? <Switch>\r\n\r\n            <Route exact path=\"/signup\" component={SignUp} />\r\n            <Route path=\"/signin\" component={SignIn} />\r\n            <Route path=\"/forgotpassword\" component={ForgotPassword}/>\r\n          </Switch>\r\n          :\r\n          <Switch>\r\n            <Route exact path=\"/teams/:teamId\" component={Meet} />\r\n            <Route exact path=\"/home/:teamId\" component={Home} />\r\n            <ProtectedRoute component={MainComponent} />\r\n          </Switch>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nfunction App(props) {\r\n  const [loader, setLoader] = useState(true)\r\n  const { auth, setJoiningRoom, setJoiningPath } = props\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    fetch(url).then((data) => {\r\n      console.log(data)\r\n      setLoader(false)\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }, [])\r\n  return (\r\n    <BrowserRouter>\r\n      {\r\n        loader ?\r\n\r\n          <div class=\"center\">\r\n            <div class=\"wave\"></div>\r\n            <div class=\"wave\"></div>\r\n            <div class=\"wave\"></div>\r\n            <div class=\"wave\"></div>\r\n            <div class=\"wave\"></div>\r\n            <div class=\"wave\"></div>\r\n            <div class=\"wave\"></div>\r\n            <div class=\"wave\"></div>\r\n            <div class=\"wave\"></div>\r\n            <div class=\"wave\"></div>\r\n          </div>\r\n\r\n          :\r\n          <Routing auth={auth} setJoiningRoom={setJoiningRoom} setJoiningPath={setJoiningPath} />\r\n\r\n\r\n      }\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.userDetails.auth,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setJoiningRoom: data => {\r\n      dispatch({\r\n        type: 'SET_JOINING_ROOM',\r\n        joiningRoom: data,\r\n      })\r\n    },\r\n    setJoiningPath: data => {\r\n      dispatch({\r\n        type: 'SET_JOINING_PATH',\r\n        joiningPath: data,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from 'redux'\r\n// store user details\r\nvar initState = {\r\n    userId: null,\r\n    name: '',\r\n    email: '',\r\n    mic: false,\r\n    camera: false,\r\n    stream: null,\r\n    videoDevices: [],\r\n    audioDevices: [],\r\n    auth: false,\r\n    socket: null,\r\n    joiningRoom: null,\r\n    joiningPath: null\r\n}\r\n\r\nconst userDetailsReducer = (state = initState, action) => {\r\n    if (action.type === 'SET_USER_ID') {\r\n        return {\r\n            ...state,\r\n            userId: action.userId\r\n        }\r\n    }\r\n    if (action.type === 'SET_SOCKET') {\r\n        return {\r\n            ...state,\r\n            socket: action.socket\r\n        }\r\n    }\r\n    if (action.type === 'SET_AUTH') {\r\n        return {\r\n            ...state,\r\n            auth: action.auth\r\n        }\r\n    }\r\n    if (action.type === 'SET_NAME') {\r\n        return {\r\n            ...state,\r\n            name: action.name\r\n        }\r\n    }\r\n    if (action.type === 'SET_EMAIL') {\r\n        return {\r\n            ...state,\r\n            email: action.email\r\n        }\r\n    }\r\n    if (action.type === 'SET_MIC') {\r\n        return {\r\n            ...state,\r\n            mic: action.mic\r\n        }\r\n    }\r\n    if (action.type === 'SET_CAMERA') {\r\n        return {\r\n            ...state,\r\n            camera: action.camera\r\n        }\r\n    }\r\n    if (action.type === 'SET_STREAM') {\r\n        return {\r\n            ...state,\r\n            stream: action.stream\r\n        }\r\n    }\r\n    if (action.type === 'SET_VIDEO_DEVICES') {\r\n        return {\r\n            ...state,\r\n            videoDevices: action.videoDevices\r\n        }\r\n    }\r\n    if (action.type === 'SET_AUDIO_DEVICES') {\r\n        return {\r\n            ...state,\r\n            audioDevices: action.audioDevices\r\n        }\r\n    }\r\n    if (action.type === 'SET_JOINING_ROOM') {\r\n        return {\r\n            ...state,\r\n            joiningRoom: action.joiningRoom\r\n        }\r\n    }\r\n    if (action.type === 'SET_JOINING_PATH') {\r\n        return {\r\n            ...state,\r\n            joiningPath: action.joiningPath\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\nconst Reducer = combineReducers({\r\n    userDetails: userDetailsReducer\r\n})\r\n\r\nexport default Reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from 'react-redux'\r\nimport Reducer from \"./Reducer/Reducer\"\r\nimport {createStore} from 'redux';\r\n\r\nconst store = createStore(Reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nconst token = localStorage.getItem('TeamsToken')\r\n// Extract token to check for authorization\r\nif (token) {\r\n  store.dispatch({type: 'SET_AUTH', auth: true})\r\n}\r\nelse{\r\n  store.dispatch({type: 'SET_AUTH', auth: false})\r\n}\r\n\r\nReactDOM.render(\r\n  <Provider store={store} >\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}